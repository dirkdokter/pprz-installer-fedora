.TH "StdLabels.Array" 3 2011-12-01 OCamldoc "OCaml library"
.SH NAME
StdLabels.Array \- no description
.SH Module
Module   StdLabels.Array
.SH Documentation
.sp
Module
.BI "Array"
 : 
.B sig  end

.sp

.sp

.sp
.sp

.I val length 
: 
.B 'a array -> int
.sp

.sp

.I val get 
: 
.B 'a array -> int -> 'a
.sp

.sp

.I val set 
: 
.B 'a array -> int -> 'a -> unit
.sp

.sp

.I val make 
: 
.B int -> 'a -> 'a array
.sp

.sp

.I val create 
: 
.B int -> 'a -> 'a array
.sp

.sp

.I val init 
: 
.B int -> f:(int -> 'a) -> 'a array
.sp

.sp

.I val make_matrix 
: 
.B dimx:int -> dimy:int -> 'a -> 'a array array
.sp

.sp

.I val create_matrix 
: 
.B dimx:int -> dimy:int -> 'a -> 'a array array
.sp

.sp

.I val append 
: 
.B 'a array -> 'a array -> 'a array
.sp

.sp

.I val concat 
: 
.B 'a array list -> 'a array
.sp

.sp

.I val sub 
: 
.B 'a array -> pos:int -> len:int -> 'a array
.sp

.sp

.I val copy 
: 
.B 'a array -> 'a array
.sp

.sp

.I val fill 
: 
.B 'a array -> pos:int -> len:int -> 'a -> unit
.sp

.sp

.I val blit 
: 
.B src:'a array -> src_pos:int -> dst:'a array -> dst_pos:int -> len:int -> unit
.sp

.sp

.I val to_list 
: 
.B 'a array -> 'a list
.sp

.sp

.I val of_list 
: 
.B 'a list -> 'a array
.sp

.sp

.I val iter 
: 
.B f:('a -> unit) -> 'a array -> unit
.sp

.sp

.I val map 
: 
.B f:('a -> 'b) -> 'a array -> 'b array
.sp

.sp

.I val iteri 
: 
.B f:(int -> 'a -> unit) -> 'a array -> unit
.sp

.sp

.I val mapi 
: 
.B f:(int -> 'a -> 'b) -> 'a array -> 'b array
.sp

.sp

.I val fold_left 
: 
.B f:('a -> 'b -> 'a) -> init:'a -> 'b array -> 'a
.sp

.sp

.I val fold_right 
: 
.B f:('a -> 'b -> 'b) -> 'a array -> init:'b -> 'b
.sp

.sp

.I val sort 
: 
.B cmp:('a -> 'a -> int) -> 'a array -> unit
.sp

.sp

.I val stable_sort 
: 
.B cmp:('a -> 'a -> int) -> 'a array -> unit
.sp

.sp

.I val fast_sort 
: 
.B cmp:('a -> 'a -> int) -> 'a array -> unit
.sp

.sp

.I val unsafe_get 
: 
.B 'a array -> int -> 'a
.sp

.sp

.I val unsafe_set 
: 
.B 'a array -> int -> 'a -> unit
.sp

.sp
