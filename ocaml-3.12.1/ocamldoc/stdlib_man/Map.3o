.TH "Map" 3 2011-12-01 OCamldoc "OCaml library"
.SH NAME
Map \- Association tables over ordered types.
.SH Module
Module   Map
.SH Documentation
.sp
Module
.BI "Map"
 : 
.B sig  end

.sp
Association tables over ordered types\&.
.sp
This module implements applicative association tables, also known as
finite maps or dictionaries, given a total ordering function
over the keys\&.
All operations over maps are purely applicative (no side\-effects)\&.
The implementation uses balanced binary trees, and therefore searching
and insertion take time logarithmic in the size of the map\&.
.sp

.sp

.sp
.sp
.I module type OrderedType = 
.B sig  end

.sp
Input signature of the functor 
.B Map\&.Make
\&.
.sp

.sp
.I module type S = 
.B sig  end

.sp
Output signature of the functor 
.B Map\&.Make
\&.
.sp

.sp
.I module Make : 
.B functor (Ord : OrderedType) -> sig  end

.sp
Functor building an implementation of the map structure
given a totally ordered type\&.
.sp

.sp
