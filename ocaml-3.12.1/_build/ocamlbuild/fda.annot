"ocamlbuild/fda.ml" 23 848 852 "ocamlbuild/fda.ml" 23 848 856
type(
  Hygiene.law list
)
ident(
  def laws "ocamlbuild/fda.ml" 45 1725 1725 --
)
"ocamlbuild/fda.ml" 25 863 880 "ocamlbuild/fda.ml" 25 863 914
type(
  string
)
"ocamlbuild/fda.ml" 26 916 939 "ocamlbuild/fda.ml" 26 916 945
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 26 916 935 "ocamlbuild/fda.ml" 26 916 945
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 26 916 951 "ocamlbuild/fda.ml" 26 916 957
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 26 916 947 "ocamlbuild/fda.ml" 26 916 957
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 26 916 963 "ocamlbuild/fda.ml" 26 916 969
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 26 916 959 "ocamlbuild/fda.ml" 26 916 969
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 26 916 975 "ocamlbuild/fda.ml" 26 916 981
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 26 916 971 "ocamlbuild/fda.ml" 26 916 981
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 26 916 987 "ocamlbuild/fda.ml" 26 916 994
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 26 916 983 "ocamlbuild/fda.ml" 26 916 994
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 26 916 934 "ocamlbuild/fda.ml" 26 916 995
type(
  Hygiene.rule list
)
"ocamlbuild/fda.ml" 27 997 1017 "ocamlbuild/fda.ml" 27 997 1021
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 25 863 867 "ocamlbuild/fda.ml" 27 997 1023
type(
  Hygiene.law
)
"ocamlbuild/fda.ml" 28 1025 1042 "ocamlbuild/fda.ml" 28 1025 1080
type(
  string
)
"ocamlbuild/fda.ml" 29 1082 1105 "ocamlbuild/fda.ml" 29 1082 1113
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 29 1082 1101 "ocamlbuild/fda.ml" 29 1082 1113
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 29 1082 1100 "ocamlbuild/fda.ml" 29 1082 1114
type(
  Hygiene.rule list
)
"ocamlbuild/fda.ml" 30 1116 1136 "ocamlbuild/fda.ml" 30 1116 1140
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 28 1025 1029 "ocamlbuild/fda.ml" 30 1116 1142
type(
  Hygiene.law
)
"ocamlbuild/fda.ml" 31 1144 1161 "ocamlbuild/fda.ml" 31 1144 1184
type(
  string
)
"ocamlbuild/fda.ml" 32 1186 1209 "ocamlbuild/fda.ml" 32 1186 1213
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 32 1186 1205 "ocamlbuild/fda.ml" 32 1186 1213
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 32 1186 1219 "ocamlbuild/fda.ml" 32 1186 1223
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 32 1186 1215 "ocamlbuild/fda.ml" 32 1186 1223
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 32 1186 1229 "ocamlbuild/fda.ml" 32 1186 1234
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 32 1186 1225 "ocamlbuild/fda.ml" 32 1186 1234
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 32 1186 1240 "ocamlbuild/fda.ml" 32 1186 1246
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 32 1186 1236 "ocamlbuild/fda.ml" 32 1186 1246
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 32 1186 1252 "ocamlbuild/fda.ml" 32 1186 1258
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 32 1186 1248 "ocamlbuild/fda.ml" 32 1186 1258
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 32 1186 1264 "ocamlbuild/fda.ml" 32 1186 1270
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 32 1186 1260 "ocamlbuild/fda.ml" 32 1186 1270
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 32 1186 1204 "ocamlbuild/fda.ml" 32 1186 1271
type(
  Hygiene.rule list
)
"ocamlbuild/fda.ml" 33 1273 1293 "ocamlbuild/fda.ml" 33 1273 1297
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 31 1144 1148 "ocamlbuild/fda.ml" 33 1273 1299
type(
  Hygiene.law
)
"ocamlbuild/fda.ml" 34 1301 1318 "ocamlbuild/fda.ml" 34 1301 1354
type(
  string
)
"ocamlbuild/fda.ml" 35 1356 1387 "ocamlbuild/fda.ml" 35 1356 1393
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 35 1356 1394 "ocamlbuild/fda.ml" 35 1356 1399
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 35 1356 1375 "ocamlbuild/fda.ml" 35 1356 1400
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 35 1356 1414 "ocamlbuild/fda.ml" 35 1356 1420
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 35 1356 1421 "ocamlbuild/fda.ml" 35 1356 1427
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 35 1356 1402 "ocamlbuild/fda.ml" 35 1356 1428
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 35 1356 1374 "ocamlbuild/fda.ml" 35 1356 1429
type(
  Hygiene.rule list
)
"ocamlbuild/fda.ml" 36 1431 1451 "ocamlbuild/fda.ml" 36 1431 1455
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 34 1301 1305 "ocamlbuild/fda.ml" 36 1431 1457
type(
  Hygiene.law
)
"ocamlbuild/fda.ml" 37 1459 1476 "ocamlbuild/fda.ml" 37 1459 1511
type(
  string
)
"ocamlbuild/fda.ml" 38 1513 1544 "ocamlbuild/fda.ml" 38 1513 1550
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 38 1513 1551 "ocamlbuild/fda.ml" 38 1513 1556
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 38 1513 1532 "ocamlbuild/fda.ml" 38 1513 1557
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 38 1513 1531 "ocamlbuild/fda.ml" 38 1513 1558
type(
  Hygiene.rule list
)
"ocamlbuild/fda.ml" 39 1560 1580 "ocamlbuild/fda.ml" 39 1560 1584
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 37 1459 1463 "ocamlbuild/fda.ml" 39 1560 1586
type(
  Hygiene.law
)
"ocamlbuild/fda.ml" 40 1588 1605 "ocamlbuild/fda.ml" 40 1588 1632
type(
  string
)
"ocamlbuild/fda.ml" 41 1634 1657 "ocamlbuild/fda.ml" 41 1634 1670
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 41 1634 1653 "ocamlbuild/fda.ml" 41 1634 1670
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 41 1634 1676 "ocamlbuild/fda.ml" 41 1634 1690
type(
  Hygiene.pattern
)
"ocamlbuild/fda.ml" 41 1634 1672 "ocamlbuild/fda.ml" 41 1634 1690
type(
  Hygiene.rule
)
"ocamlbuild/fda.ml" 41 1634 1652 "ocamlbuild/fda.ml" 41 1634 1691
type(
  Hygiene.rule list
)
"ocamlbuild/fda.ml" 42 1693 1713 "ocamlbuild/fda.ml" 42 1693 1717
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 40 1588 1592 "ocamlbuild/fda.ml" 42 1693 1719
type(
  Hygiene.law
)
"ocamlbuild/fda.ml" 24 859 861 "ocamlbuild/fda.ml" 43 1720 1723
type(
  Hygiene.law list
)
"ocamlbuild/fda.ml" 45 1725 1729 "ocamlbuild/fda.ml" 45 1725 1736
type(
  bool Slurp.entry -> unit
)
ident(
  def inspect "ocamlbuild/fda.ml" 80 2614 2658 --
)
"ocamlbuild/fda.ml" 45 1725 1737 "ocamlbuild/fda.ml" 45 1725 1742
type(
  bool Slurp.entry
)
ident(
  def entry "ocamlbuild/fda.ml" 46 1745 1747 "ocamlbuild/fda.ml" 80 2614 2658
)
"ocamlbuild/fda.ml" 46 1745 1747 "ocamlbuild/fda.ml" 46 1745 1754
type(
  int -> (unit, Format.formatter, unit) format -> unit
)
ident(
  ext_ref Log.dprintf
)
"ocamlbuild/fda.ml" 46 1745 1755 "ocamlbuild/fda.ml" 46 1745 1756
type(
  int
)
"ocamlbuild/fda.ml" 46 1745 1757 "ocamlbuild/fda.ml" 46 1745 1778
type(
  (unit, Format.formatter, unit) format
)
"ocamlbuild/fda.ml" 46 1745 1747 "ocamlbuild/fda.ml" 46 1745 1778
call(
  stack
)
type(
  unit
)
"ocamlbuild/fda.ml" 47 1780 1786 "ocamlbuild/fda.ml" 47 1780 1790
type(
  bool ref
)
"ocamlbuild/fda.ml" 47 1780 1793 "ocamlbuild/fda.ml" 47 1780 1796
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"ocamlbuild/fda.ml" 47 1780 1797 "ocamlbuild/fda.ml" 47 1780 1802
type(
  bool
)
"ocamlbuild/fda.ml" 47 1780 1793 "ocamlbuild/fda.ml" 47 1780 1802
type(
  bool ref
)
"ocamlbuild/fda.ml" 48 1806 1814 "ocamlbuild/fda.ml" 48 1806 1827
type(
  ?sanitize:Pathname.t ->
  Hygiene.law list -> bool Slurp.entry -> (Hygiene.law * string list) list
)
ident(
  ext_ref Hygiene.check
)
"ocamlbuild/fda.ml" 51 1855 1866 "ocamlbuild/fda.ml" 51 1855 1867
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/fda.ml" 51 1855 1867 "ocamlbuild/fda.ml" 51 1855 1883
type(
  bool ref
)
ident(
  ext_ref Options.sanitize
)
"ocamlbuild/fda.ml" 51 1855 1866 "ocamlbuild/fda.ml" 51 1855 1883
type(
  bool
)
"ocamlbuild/fda.ml" 52 1889 1904 "ocamlbuild/fda.ml" 52 1889 1919
type(
  Pathname.t -> Pathname.t -> Pathname.t
)
ident(
  ext_ref Pathname.concat
)
"ocamlbuild/fda.ml" 52 1889 1920 "ocamlbuild/fda.ml" 52 1889 1921
type(
  Pathname.t ref -> Pathname.t
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/fda.ml" 52 1889 1921 "ocamlbuild/fda.ml" 52 1889 1938
type(
  Pathname.t ref
)
ident(
  ext_ref Options.build_dir
)
"ocamlbuild/fda.ml" 52 1889 1920 "ocamlbuild/fda.ml" 52 1889 1938
type(
  Pathname.t
)
"ocamlbuild/fda.ml" 52 1889 1939 "ocamlbuild/fda.ml" 52 1889 1940
type(
  Pathname.t ref -> Pathname.t
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/fda.ml" 52 1889 1940 "ocamlbuild/fda.ml" 52 1889 1967
type(
  Pathname.t ref
)
ident(
  ext_ref Options.sanitization_script
)
"ocamlbuild/fda.ml" 52 1889 1939 "ocamlbuild/fda.ml" 52 1889 1967
type(
  Pathname.t
)
"ocamlbuild/fda.ml" 52 1889 1903 "ocamlbuild/fda.ml" 52 1889 1968
call(
  stack
)
type(
  Pathname.t
)
"ocamlbuild/fda.ml" 52 1889 1899 "ocamlbuild/fda.ml" 52 1889 1968
type(
  Pathname.t option
)
"ocamlbuild/fda.ml" 54 1982 1992 "ocamlbuild/fda.ml" 54 1982 1996
type(
  Pathname.t option
)
"ocamlbuild/fda.ml" 50 1843 1849 "ocamlbuild/fda.ml" 55 1997 2006
type(
  Pathname.t option
)
"ocamlbuild/fda.ml" 56 2007 2013 "ocamlbuild/fda.ml" 56 2007 2017
type(
  Hygiene.law list
)
ident(
  int_ref laws "ocamlbuild/fda.ml" 23 848 852 "ocamlbuild/fda.ml" 23 848 856
)
"ocamlbuild/fda.ml" 56 2007 2018 "ocamlbuild/fda.ml" 56 2007 2023
type(
  bool Slurp.entry
)
ident(
  int_ref entry "ocamlbuild/fda.ml" 45 1725 1737 "ocamlbuild/fda.ml" 45 1725 1742
)
"ocamlbuild/fda.ml" 48 1806 1814 "ocamlbuild/fda.ml" 56 2007 2023
call(
  stack
)
type(
  (Hygiene.law * string list) list
)
"ocamlbuild/fda.ml" 58 2031 2035 "ocamlbuild/fda.ml" 58 2031 2037
type(
  (Hygiene.law * string list) list
)
"ocamlbuild/fda.ml" 58 2031 2041 "ocamlbuild/fda.ml" 58 2031 2043
type(
  unit
)
"ocamlbuild/fda.ml" 59 2044 2048 "ocamlbuild/fda.ml" 59 2044 2053
type(
  (Hygiene.law * string list) list
)
ident(
  def stuff "ocamlbuild/fda.ml" 60 2057 2061 "ocamlbuild/fda.ml" 80 2614 2658
)
"ocamlbuild/fda.ml" 60 2057 2061 "ocamlbuild/fda.ml" 60 2057 2070
type(
  (Hygiene.law * string list -> unit) ->
  (Hygiene.law * string list) list -> unit
)
ident(
  ext_ref List.iter
)
"ocamlbuild/fda.ml" 61 2071 2088 "ocamlbuild/fda.ml" 61 2071 2091
type(
  Hygiene.law
)
ident(
  def law "ocamlbuild/fda.ml" 62 2102 2110 "ocamlbuild/fda.ml" 77 2576 2590
)
"ocamlbuild/fda.ml" 61 2071 2093 "ocamlbuild/fda.ml" 61 2071 2097
type(
  string list
)
ident(
  def msgs "ocamlbuild/fda.ml" 62 2102 2110 "ocamlbuild/fda.ml" 77 2576 2590
)
"ocamlbuild/fda.ml" 61 2071 2087 "ocamlbuild/fda.ml" 61 2071 2098
type(
  Hygiene.law * string list
)
"ocamlbuild/fda.ml" 62 2102 2110 "ocamlbuild/fda.ml" 62 2102 2123
type(
  (string -> string -> unit, out_channel, unit) format ->
  string -> string -> unit
)
ident(
  ext_ref Printf.printf
)
"ocamlbuild/fda.ml" 62 2102 2124 "ocamlbuild/fda.ml" 62 2102 2135
type(
  (string -> string -> unit, out_channel, unit) format
)
"ocamlbuild/fda.ml" 63 2136 2153 "ocamlbuild/fda.ml" 63 2136 2156
type(
  Hygiene.law
)
ident(
  int_ref law "ocamlbuild/fda.ml" 61 2071 2088 "ocamlbuild/fda.ml" 61 2071 2091
)
"ocamlbuild/fda.ml" 63 2136 2153 "ocamlbuild/fda.ml" 63 2136 2168
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 64 2174 2187 "ocamlbuild/fda.ml" 64 2174 2191
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 64 2174 2195 "ocamlbuild/fda.ml" 64 2174 2204
type(
  string
)
"ocamlbuild/fda.ml" 65 2205 2218 "ocamlbuild/fda.ml" 65 2205 2222
type(
  Hygiene.penalty
)
"ocamlbuild/fda.ml" 66 2226 2244 "ocamlbuild/fda.ml" 66 2226 2247
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"ocamlbuild/fda.ml" 66 2226 2248 "ocamlbuild/fda.ml" 66 2226 2249
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/fda.ml" 66 2226 2249 "ocamlbuild/fda.ml" 66 2226 2253
type(
  bool ref
)
ident(
  int_ref evil "ocamlbuild/fda.ml" 47 1780 1786 "ocamlbuild/fda.ml" 47 1780 1790
)
"ocamlbuild/fda.ml" 66 2226 2248 "ocamlbuild/fda.ml" 66 2226 2253
type(
  bool
)
"ocamlbuild/fda.ml" 66 2226 2244 "ocamlbuild/fda.ml" 66 2226 2253
type(
  bool
)
"ocamlbuild/fda.ml" 68 2282 2301 "ocamlbuild/fda.ml" 68 2282 2314
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"ocamlbuild/fda.ml" 68 2282 2315 "ocamlbuild/fda.ml" 68 2282 2375
type(
  (unit, out_channel, unit) format
)
"ocamlbuild/fda.ml" 68 2282 2301 "ocamlbuild/fda.ml" 68 2282 2375
call(
  stack
)
type(
  unit
)
"ocamlbuild/fda.ml" 69 2377 2396 "ocamlbuild/fda.ml" 69 2377 2400
type(
  bool ref
)
ident(
  int_ref evil "ocamlbuild/fda.ml" 47 1780 1786 "ocamlbuild/fda.ml" 47 1780 1790
)
"ocamlbuild/fda.ml" 69 2377 2401 "ocamlbuild/fda.ml" 69 2377 2403
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"ocamlbuild/fda.ml" 69 2377 2404 "ocamlbuild/fda.ml" 69 2377 2408
type(
  bool
)
"ocamlbuild/fda.ml" 69 2377 2396 "ocamlbuild/fda.ml" 69 2377 2408
type(
  unit
)
"ocamlbuild/fda.ml" 67 2259 2276 "ocamlbuild/fda.ml" 70 2409 2429
type(
  unit
)
"ocamlbuild/fda.ml" 66 2226 2241 "ocamlbuild/fda.ml" 70 2409 2429
type(
  unit
)
"ocamlbuild/fda.ml" 71 2431 2445 "ocamlbuild/fda.ml" 71 2431 2452
type(
  string
)
"ocamlbuild/fda.ml" 66 2226 2241 "ocamlbuild/fda.ml" 71 2431 2452
type(
  string
)
"ocamlbuild/fda.ml" 63 2136 2146 "ocamlbuild/fda.ml" 71 2431 2453
type(
  string
)
"ocamlbuild/fda.ml" 72 2454 2464 "ocamlbuild/fda.ml" 72 2454 2467
type(
  Hygiene.law
)
ident(
  int_ref law "ocamlbuild/fda.ml" 61 2071 2088 "ocamlbuild/fda.ml" 61 2071 2091
)
"ocamlbuild/fda.ml" 72 2454 2464 "ocamlbuild/fda.ml" 72 2454 2476
type(
  string
)
"ocamlbuild/fda.ml" 62 2102 2110 "ocamlbuild/fda.ml" 72 2454 2476
call(
  stack
)
type(
  unit
)
"ocamlbuild/fda.ml" 73 2478 2486 "ocamlbuild/fda.ml" 73 2478 2495
type(
  (string -> unit) -> string list -> unit
)
ident(
  ext_ref List.iter
)
"ocamlbuild/fda.ml" 74 2496 2516 "ocamlbuild/fda.ml" 74 2496 2519
type(
  string
)
ident(
  def msg "ocamlbuild/fda.ml" 75 2523 2535 "ocamlbuild/fda.ml" 75 2523 2561
)
"ocamlbuild/fda.ml" 75 2523 2535 "ocamlbuild/fda.ml" 75 2523 2548
type(
  (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  ext_ref Printf.printf
)
"ocamlbuild/fda.ml" 75 2523 2549 "ocamlbuild/fda.ml" 75 2523 2557
type(
  (string -> unit, out_channel, unit) format
)
"ocamlbuild/fda.ml" 75 2523 2558 "ocamlbuild/fda.ml" 75 2523 2561
type(
  string
)
ident(
  int_ref msg "ocamlbuild/fda.ml" 74 2496 2516 "ocamlbuild/fda.ml" 74 2496 2519
)
"ocamlbuild/fda.ml" 75 2523 2535 "ocamlbuild/fda.ml" 75 2523 2561
call(
  tail
)
type(
  unit
)
"ocamlbuild/fda.ml" 74 2496 2506 "ocamlbuild/fda.ml" 76 2562 2575
type(
  string -> unit
)
"ocamlbuild/fda.ml" 77 2576 2586 "ocamlbuild/fda.ml" 77 2576 2590
type(
  string list
)
ident(
  int_ref msgs "ocamlbuild/fda.ml" 61 2071 2093 "ocamlbuild/fda.ml" 61 2071 2097
)
"ocamlbuild/fda.ml" 73 2478 2486 "ocamlbuild/fda.ml" 77 2576 2590
call(
  tail
)
type(
  unit
)
"ocamlbuild/fda.ml" 62 2102 2110 "ocamlbuild/fda.ml" 77 2576 2590
type(
  unit
)
"ocamlbuild/fda.ml" 61 2071 2077 "ocamlbuild/fda.ml" 78 2591 2600
type(
  Hygiene.law * string list -> unit
)
"ocamlbuild/fda.ml" 79 2601 2607 "ocamlbuild/fda.ml" 79 2601 2612
type(
  (Hygiene.law * string list) list
)
ident(
  int_ref stuff "ocamlbuild/fda.ml" 59 2044 2048 "ocamlbuild/fda.ml" 59 2044 2053
)
"ocamlbuild/fda.ml" 60 2057 2061 "ocamlbuild/fda.ml" 79 2601 2612
call(
  stack
)
type(
  unit
)
"ocamlbuild/fda.ml" 80 2614 2621 "ocamlbuild/fda.ml" 80 2614 2622
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/fda.ml" 80 2614 2622 "ocamlbuild/fda.ml" 80 2614 2626
type(
  bool ref
)
ident(
  int_ref evil "ocamlbuild/fda.ml" 47 1780 1786 "ocamlbuild/fda.ml" 47 1780 1790
)
"ocamlbuild/fda.ml" 80 2614 2621 "ocamlbuild/fda.ml" 80 2614 2626
type(
  bool
)
"ocamlbuild/fda.ml" 80 2614 2632 "ocamlbuild/fda.ml" 80 2614 2637
type(
  exn -> unit
)
ident(
  ext_ref Pervasives.raise
)
"ocamlbuild/fda.ml" 80 2614 2638 "ocamlbuild/fda.ml" 80 2614 2657
type(
  exn
)
"ocamlbuild/fda.ml" 80 2614 2632 "ocamlbuild/fda.ml" 80 2614 2657
type(
  unit
)
"ocamlbuild/fda.ml" 80 2614 2618 "ocamlbuild/fda.ml" 80 2614 2658
type(
  unit
)
"ocamlbuild/fda.ml" 60 2057 2061 "ocamlbuild/fda.ml" 80 2614 2658
type(
  unit
)
"ocamlbuild/fda.ml" 48 1806 1808 "ocamlbuild/fda.ml" 80 2614 2658
type(
  unit
)
"ocamlbuild/fda.ml" 47 1780 1782 "ocamlbuild/fda.ml" 80 2614 2658
type(
  unit
)
"ocamlbuild/fda.ml" 46 1745 1747 "ocamlbuild/fda.ml" 80 2614 2658
type(
  unit
)
