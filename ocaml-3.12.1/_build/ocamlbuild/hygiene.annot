"ocamlbuild/hygiene.ml" 34 1070 1074 "ocamlbuild/hygiene.ml" 34 1070 1086
type(
  ('a -> 'b option) -> 'a list -> 'b list
)
ident(
  def list_collect "ocamlbuild/hygiene.ml" 44 1293 1293 --
)
"ocamlbuild/hygiene.ml" 34 1070 1087 "ocamlbuild/hygiene.ml" 34 1070 1088
type(
  'a -> 'b option
)
ident(
  def f "ocamlbuild/hygiene.ml" 34 1070 1089 "ocamlbuild/hygiene.ml" 42 1280 1291
)
"ocamlbuild/hygiene.ml" 34 1070 1089 "ocamlbuild/hygiene.ml" 34 1070 1090
type(
  'a list
)
ident(
  def l "ocamlbuild/hygiene.ml" 35 1093 1095 "ocamlbuild/hygiene.ml" 42 1280 1291
)
"ocamlbuild/hygiene.ml" 35 1093 1103 "ocamlbuild/hygiene.ml" 35 1093 1107
type(
  'b list -> 'a list -> 'b list
)
"ocamlbuild/hygiene.ml" 35 1093 1108 "ocamlbuild/hygiene.ml" 35 1093 1114
type(
  'b list
)
ident(
  def result "ocamlbuild/hygiene.ml" 35 1093 1117 "ocamlbuild/hygiene.ml" 40 1231 1274
)
"ocamlbuild/hygiene.ml" 36 1126 1132 "ocamlbuild/hygiene.ml" 36 1126 1134
type(
  'a list
)
"ocamlbuild/hygiene.ml" 36 1126 1138 "ocamlbuild/hygiene.ml" 36 1126 1146
type(
  'b list -> 'b list
)
ident(
  ext_ref My_std.List.rev
)
"ocamlbuild/hygiene.ml" 36 1126 1147 "ocamlbuild/hygiene.ml" 36 1126 1153
type(
  'b list
)
ident(
  int_ref result "ocamlbuild/hygiene.ml" 35 1093 1108 "ocamlbuild/hygiene.ml" 35 1093 1114
)
"ocamlbuild/hygiene.ml" 36 1126 1138 "ocamlbuild/hygiene.ml" 36 1126 1153
call(
  tail
)
type(
  'b list
)
"ocamlbuild/hygiene.ml" 37 1154 1160 "ocamlbuild/hygiene.ml" 37 1154 1161
type(
  'a
)
ident(
  def x "ocamlbuild/hygiene.ml" 38 1173 1181 "ocamlbuild/hygiene.ml" 40 1231 1274
)
"ocamlbuild/hygiene.ml" 37 1154 1165 "ocamlbuild/hygiene.ml" 37 1154 1169
type(
  'a list
)
ident(
  def rest "ocamlbuild/hygiene.ml" 38 1173 1181 "ocamlbuild/hygiene.ml" 40 1231 1274
)
"ocamlbuild/hygiene.ml" 37 1154 1160 "ocamlbuild/hygiene.ml" 37 1154 1169
type(
  'a list
)
"ocamlbuild/hygiene.ml" 38 1173 1187 "ocamlbuild/hygiene.ml" 38 1173 1188
type(
  'a -> 'b option
)
ident(
  int_ref f "ocamlbuild/hygiene.ml" 34 1070 1087 "ocamlbuild/hygiene.ml" 34 1070 1088
)
"ocamlbuild/hygiene.ml" 38 1173 1189 "ocamlbuild/hygiene.ml" 38 1173 1190
type(
  'a
)
ident(
  int_ref x "ocamlbuild/hygiene.ml" 37 1154 1160 "ocamlbuild/hygiene.ml" 37 1154 1161
)
"ocamlbuild/hygiene.ml" 38 1173 1187 "ocamlbuild/hygiene.ml" 38 1173 1190
call(
  stack
)
type(
  'b option
)
"ocamlbuild/hygiene.ml" 39 1196 1206 "ocamlbuild/hygiene.ml" 39 1196 1210
type(
  'b option
)
"ocamlbuild/hygiene.ml" 39 1196 1214 "ocamlbuild/hygiene.ml" 39 1196 1218
type(
  'b list -> 'a list -> 'b list
)
ident(
  int_ref loop "ocamlbuild/hygiene.ml" 35 1093 1103 "ocamlbuild/hygiene.ml" 35 1093 1107
)
"ocamlbuild/hygiene.ml" 39 1196 1219 "ocamlbuild/hygiene.ml" 39 1196 1225
type(
  'b list
)
ident(
  int_ref result "ocamlbuild/hygiene.ml" 35 1093 1108 "ocamlbuild/hygiene.ml" 35 1093 1114
)
"ocamlbuild/hygiene.ml" 39 1196 1226 "ocamlbuild/hygiene.ml" 39 1196 1230
type(
  'a list
)
ident(
  int_ref rest "ocamlbuild/hygiene.ml" 37 1154 1165 "ocamlbuild/hygiene.ml" 37 1154 1169
)
"ocamlbuild/hygiene.ml" 39 1196 1214 "ocamlbuild/hygiene.ml" 39 1196 1230
call(
  tail
)
type(
  'b list
)
"ocamlbuild/hygiene.ml" 40 1231 1246 "ocamlbuild/hygiene.ml" 40 1231 1247
type(
  'b
)
ident(
  def y "ocamlbuild/hygiene.ml" 40 1231 1251 "ocamlbuild/hygiene.ml" 40 1231 1274
)
"ocamlbuild/hygiene.ml" 40 1231 1241 "ocamlbuild/hygiene.ml" 40 1231 1247
type(
  'b option
)
"ocamlbuild/hygiene.ml" 40 1231 1251 "ocamlbuild/hygiene.ml" 40 1231 1255
type(
  'b list -> 'a list -> 'b list
)
ident(
  int_ref loop "ocamlbuild/hygiene.ml" 35 1093 1103 "ocamlbuild/hygiene.ml" 35 1093 1107
)
"ocamlbuild/hygiene.ml" 40 1231 1257 "ocamlbuild/hygiene.ml" 40 1231 1258
type(
  'b
)
ident(
  int_ref y "ocamlbuild/hygiene.ml" 40 1231 1246 "ocamlbuild/hygiene.ml" 40 1231 1247
)
"ocamlbuild/hygiene.ml" 40 1231 1262 "ocamlbuild/hygiene.ml" 40 1231 1268
type(
  'b list
)
ident(
  int_ref result "ocamlbuild/hygiene.ml" 35 1093 1108 "ocamlbuild/hygiene.ml" 35 1093 1114
)
"ocamlbuild/hygiene.ml" 40 1231 1256 "ocamlbuild/hygiene.ml" 40 1231 1269
type(
  'b list
)
"ocamlbuild/hygiene.ml" 40 1231 1270 "ocamlbuild/hygiene.ml" 40 1231 1274
type(
  'a list
)
ident(
  int_ref rest "ocamlbuild/hygiene.ml" 37 1154 1165 "ocamlbuild/hygiene.ml" 37 1154 1169
)
"ocamlbuild/hygiene.ml" 40 1231 1251 "ocamlbuild/hygiene.ml" 40 1231 1274
call(
  tail
)
type(
  'b list
)
"ocamlbuild/hygiene.ml" 38 1173 1181 "ocamlbuild/hygiene.ml" 40 1231 1274
type(
  'b list
)
"ocamlbuild/hygiene.ml" 35 1093 1117 "ocamlbuild/hygiene.ml" 40 1231 1274
type(
  'a list -> 'b list
)
"ocamlbuild/hygiene.ml" 42 1280 1282 "ocamlbuild/hygiene.ml" 42 1280 1286
type(
  'b list -> 'a list -> 'b list
)
ident(
  int_ref loop "ocamlbuild/hygiene.ml" 35 1093 1103 "ocamlbuild/hygiene.ml" 35 1093 1107
)
"ocamlbuild/hygiene.ml" 42 1280 1287 "ocamlbuild/hygiene.ml" 42 1280 1289
type(
  'b list
)
"ocamlbuild/hygiene.ml" 42 1280 1290 "ocamlbuild/hygiene.ml" 42 1280 1291
type(
  'a list
)
ident(
  int_ref l "ocamlbuild/hygiene.ml" 34 1070 1089 "ocamlbuild/hygiene.ml" 34 1070 1090
)
"ocamlbuild/hygiene.ml" 42 1280 1282 "ocamlbuild/hygiene.ml" 42 1280 1291
call(
  tail
)
type(
  'b list
)
"ocamlbuild/hygiene.ml" 35 1093 1095 "ocamlbuild/hygiene.ml" 42 1280 1291
type(
  'b list
)
"ocamlbuild/hygiene.ml" 44 1293 1297 "ocamlbuild/hygiene.ml" 44 1293 1314
type(
  ('a -> 'b option) -> 'a list -> 'b option
)
ident(
  def list_none_for_all "ocamlbuild/hygiene.ml" 54 1466 1466 --
)
"ocamlbuild/hygiene.ml" 44 1293 1315 "ocamlbuild/hygiene.ml" 44 1293 1316
type(
  'a -> 'b option
)
ident(
  def f "ocamlbuild/hygiene.ml" 44 1293 1317 "ocamlbuild/hygiene.ml" 52 1456 1464
)
"ocamlbuild/hygiene.ml" 44 1293 1317 "ocamlbuild/hygiene.ml" 44 1293 1318
type(
  'a list
)
ident(
  def l "ocamlbuild/hygiene.ml" 45 1321 1323 "ocamlbuild/hygiene.ml" 52 1456 1464
)
"ocamlbuild/hygiene.ml" 45 1321 1331 "ocamlbuild/hygiene.ml" 45 1321 1335
type(
  'a list -> 'b option
)
"ocamlbuild/hygiene.ml" 46 1347 1353 "ocamlbuild/hygiene.ml" 46 1347 1355
type(
  'a list
)
"ocamlbuild/hygiene.ml" 46 1347 1359 "ocamlbuild/hygiene.ml" 46 1347 1363
type(
  'b option
)
"ocamlbuild/hygiene.ml" 47 1364 1370 "ocamlbuild/hygiene.ml" 47 1364 1371
type(
  'a
)
ident(
  def x "ocamlbuild/hygiene.ml" 48 1383 1391 "ocamlbuild/hygiene.ml" 50 1434 1450
)
"ocamlbuild/hygiene.ml" 47 1364 1375 "ocamlbuild/hygiene.ml" 47 1364 1379
type(
  'a list
)
ident(
  def rest "ocamlbuild/hygiene.ml" 48 1383 1391 "ocamlbuild/hygiene.ml" 50 1434 1450
)
"ocamlbuild/hygiene.ml" 47 1364 1370 "ocamlbuild/hygiene.ml" 47 1364 1379
type(
  'a list
)
"ocamlbuild/hygiene.ml" 48 1383 1397 "ocamlbuild/hygiene.ml" 48 1383 1398
type(
  'a -> 'b option
)
ident(
  int_ref f "ocamlbuild/hygiene.ml" 44 1293 1315 "ocamlbuild/hygiene.ml" 44 1293 1316
)
"ocamlbuild/hygiene.ml" 48 1383 1399 "ocamlbuild/hygiene.ml" 48 1383 1400
type(
  'a
)
ident(
  int_ref x "ocamlbuild/hygiene.ml" 47 1364 1370 "ocamlbuild/hygiene.ml" 47 1364 1371
)
"ocamlbuild/hygiene.ml" 48 1383 1397 "ocamlbuild/hygiene.ml" 48 1383 1400
call(
  stack
)
type(
  'b option
)
"ocamlbuild/hygiene.ml" 49 1406 1416 "ocamlbuild/hygiene.ml" 49 1406 1420
type(
  'b option
)
"ocamlbuild/hygiene.ml" 49 1406 1424 "ocamlbuild/hygiene.ml" 49 1406 1428
type(
  'a list -> 'b option
)
ident(
  int_ref loop "ocamlbuild/hygiene.ml" 45 1321 1331 "ocamlbuild/hygiene.ml" 45 1321 1335
)
"ocamlbuild/hygiene.ml" 49 1406 1429 "ocamlbuild/hygiene.ml" 49 1406 1433
type(
  'a list
)
ident(
  int_ref rest "ocamlbuild/hygiene.ml" 47 1364 1375 "ocamlbuild/hygiene.ml" 47 1364 1379
)
"ocamlbuild/hygiene.ml" 49 1406 1424 "ocamlbuild/hygiene.ml" 49 1406 1433
call(
  tail
)
type(
  'b option
)
"ocamlbuild/hygiene.ml" 50 1434 1444 "ocamlbuild/hygiene.ml" 50 1434 1445
type(
  'b option
)
ident(
  def y "ocamlbuild/hygiene.ml" 50 1434 1449 "ocamlbuild/hygiene.ml" 50 1434 1450
)
"ocamlbuild/hygiene.ml" 50 1434 1449 "ocamlbuild/hygiene.ml" 50 1434 1450
type(
  'b option
)
ident(
  int_ref y "ocamlbuild/hygiene.ml" 50 1434 1444 "ocamlbuild/hygiene.ml" 50 1434 1445
)
"ocamlbuild/hygiene.ml" 48 1383 1391 "ocamlbuild/hygiene.ml" 50 1434 1450
type(
  'b option
)
"ocamlbuild/hygiene.ml" 45 1321 1338 "ocamlbuild/hygiene.ml" 50 1434 1450
type(
  'a list -> 'b option
)
"ocamlbuild/hygiene.ml" 52 1456 1458 "ocamlbuild/hygiene.ml" 52 1456 1462
type(
  'a list -> 'b option
)
ident(
  int_ref loop "ocamlbuild/hygiene.ml" 45 1321 1331 "ocamlbuild/hygiene.ml" 45 1321 1335
)
"ocamlbuild/hygiene.ml" 52 1456 1463 "ocamlbuild/hygiene.ml" 52 1456 1464
type(
  'a list
)
ident(
  int_ref l "ocamlbuild/hygiene.ml" 44 1293 1317 "ocamlbuild/hygiene.ml" 44 1293 1318
)
"ocamlbuild/hygiene.ml" 52 1456 1458 "ocamlbuild/hygiene.ml" 52 1456 1464
call(
  tail
)
type(
  'b option
)
"ocamlbuild/hygiene.ml" 45 1321 1323 "ocamlbuild/hygiene.ml" 52 1456 1464
type(
  'b option
)
"ocamlbuild/hygiene.ml" 54 1466 1470 "ocamlbuild/hygiene.ml" 54 1466 1472
type(
  ('a, unit, string) format -> 'a
)
ident(
  def sf "ocamlbuild/hygiene.ml" 56 1491 1491 --
)
"ocamlbuild/hygiene.ml" 54 1466 1475 "ocamlbuild/hygiene.ml" 54 1466 1489
type(
  ('a, unit, string) format -> 'a
)
ident(
  ext_ref Printf.sprintf
)
"ocamlbuild/hygiene.ml" 56 1491 1503 "ocamlbuild/hygiene.ml" 56 1491 1519
call(
  stack
)
"ocamlbuild/hygiene.ml" 58 1523 1527 "ocamlbuild/hygiene.ml" 58 1523 1532
type(
  ?sanitize:string ->
  law list -> bool Slurp.entry -> (law * string list) list
)
ident(
  def check "ocamlbuild/hygiene.ml" 171 5776 5781 --
)
"ocamlbuild/hygiene.ml" 58 1523 1534 "ocamlbuild/hygiene.ml" 58 1523 1542
type(
  string option
)
ident(
  def sanitize "ocamlbuild/hygiene.ml" 58 1523 1543 "ocamlbuild/hygiene.ml" 171 5776 5781
)
"ocamlbuild/hygiene.ml" 58 1523 1543 "ocamlbuild/hygiene.ml" 58 1523 1547
type(
  law list
)
ident(
  def laws "ocamlbuild/hygiene.ml" 58 1523 1548 "ocamlbuild/hygiene.ml" 171 5776 5781
)
"ocamlbuild/hygiene.ml" 58 1523 1548 "ocamlbuild/hygiene.ml" 58 1523 1553
type(
  bool Slurp.entry
)
ident(
  def entry "ocamlbuild/hygiene.ml" 59 1556 1558 "ocamlbuild/hygiene.ml" 171 5776 5781
)
"ocamlbuild/hygiene.ml" 59 1556 1562 "ocamlbuild/hygiene.ml" 59 1556 1571
type(
  (law * string list) list ref
)
"ocamlbuild/hygiene.ml" 59 1556 1574 "ocamlbuild/hygiene.ml" 59 1556 1577
type(
  (law * string list) list -> (law * string list) list ref
)
ident(
  ext_ref Pervasives.ref
)
"ocamlbuild/hygiene.ml" 59 1556 1578 "ocamlbuild/hygiene.ml" 59 1556 1580
type(
  (law * string list) list
)
"ocamlbuild/hygiene.ml" 59 1556 1574 "ocamlbuild/hygiene.ml" 59 1556 1580
type(
  (law * string list) list ref
)
"ocamlbuild/hygiene.ml" 60 1584 1590 "ocamlbuild/hygiene.ml" 60 1584 1598
type(
  SS.t ref
)
"ocamlbuild/hygiene.ml" 60 1584 1601 "ocamlbuild/hygiene.ml" 60 1584 1604
type(
  SS.t -> SS.t ref
)
ident(
  ext_ref Pervasives.ref
)
"ocamlbuild/hygiene.ml" 60 1584 1605 "ocamlbuild/hygiene.ml" 60 1584 1613
type(
  SS.t
)
ident(
  ext_ref SS.empty
)
"ocamlbuild/hygiene.ml" 60 1584 1601 "ocamlbuild/hygiene.ml" 60 1584 1613
type(
  SS.t ref
)
"ocamlbuild/hygiene.ml" 61 1617 1623 "ocamlbuild/hygiene.ml" 61 1617 1625
type(
  unit
)
"ocamlbuild/hygiene.ml" 62 1628 1638 "ocamlbuild/hygiene.ml" 62 1628 1646
type(
  string option
)
ident(
  int_ref sanitize "ocamlbuild/hygiene.ml" 58 1523 1534 "ocamlbuild/hygiene.ml" 58 1523 1542
)
"ocamlbuild/hygiene.ml" 63 1652 1663 "ocamlbuild/hygiene.ml" 63 1652 1665
type(
  string
)
ident(
  def fn "ocamlbuild/hygiene.ml" 63 1652 1669 "ocamlbuild/hygiene.ml" 63 1652 1709
)
"ocamlbuild/hygiene.ml" 63 1652 1658 "ocamlbuild/hygiene.ml" 63 1652 1665
type(
  string option
)
"ocamlbuild/hygiene.ml" 63 1652 1672 "ocamlbuild/hygiene.ml" 63 1652 1687
type(
  string -> bool
)
ident(
  ext_ref My_std.sys_file_exists
)
"ocamlbuild/hygiene.ml" 63 1652 1688 "ocamlbuild/hygiene.ml" 63 1652 1690
type(
  string
)
ident(
  int_ref fn "ocamlbuild/hygiene.ml" 63 1652 1663 "ocamlbuild/hygiene.ml" 63 1652 1665
)
"ocamlbuild/hygiene.ml" 63 1652 1672 "ocamlbuild/hygiene.ml" 63 1652 1690
call(
  stack
)
type(
  bool
)
"ocamlbuild/hygiene.ml" 63 1652 1696 "ocamlbuild/hygiene.ml" 63 1652 1706
type(
  string -> unit
)
ident(
  ext_ref My_std.sys_remove
)
"ocamlbuild/hygiene.ml" 63 1652 1707 "ocamlbuild/hygiene.ml" 63 1652 1709
type(
  string
)
ident(
  int_ref fn "ocamlbuild/hygiene.ml" 63 1652 1663 "ocamlbuild/hygiene.ml" 63 1652 1665
)
"ocamlbuild/hygiene.ml" 63 1652 1696 "ocamlbuild/hygiene.ml" 63 1652 1709
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 63 1652 1669 "ocamlbuild/hygiene.ml" 63 1652 1709
type(
  unit
)
"ocamlbuild/hygiene.ml" 64 1710 1716 "ocamlbuild/hygiene.ml" 64 1710 1720
type(
  string option
)
"ocamlbuild/hygiene.ml" 64 1710 1724 "ocamlbuild/hygiene.ml" 64 1710 1726
type(
  unit
)
"ocamlbuild/hygiene.ml" 62 1628 1632 "ocamlbuild/hygiene.ml" 64 1710 1726
type(
  unit
)
"ocamlbuild/hygiene.ml" 66 1732 1738 "ocamlbuild/hygiene.ml" 66 1732 1744
type(
  string -> string -> unit
)
"ocamlbuild/hygiene.ml" 66 1732 1745 "ocamlbuild/hygiene.ml" 66 1732 1749
type(
  string
)
ident(
  def path "ocamlbuild/hygiene.ml" 66 1732 1750 "ocamlbuild/hygiene.ml" 68 1786 1848
)
"ocamlbuild/hygiene.ml" 66 1732 1750 "ocamlbuild/hygiene.ml" 66 1732 1754
type(
  string
)
ident(
  def name "ocamlbuild/hygiene.ml" 67 1757 1761 "ocamlbuild/hygiene.ml" 68 1786 1848
)
"ocamlbuild/hygiene.ml" 67 1757 1764 "ocamlbuild/hygiene.ml" 67 1757 1772
type(
  string option
)
ident(
  int_ref sanitize "ocamlbuild/hygiene.ml" 58 1523 1534 "ocamlbuild/hygiene.ml" 58 1523 1542
)
"ocamlbuild/hygiene.ml" 67 1757 1773 "ocamlbuild/hygiene.ml" 67 1757 1775
type(
  string option -> string option -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"ocamlbuild/hygiene.ml" 67 1757 1776 "ocamlbuild/hygiene.ml" 67 1757 1780
type(
  string option
)
"ocamlbuild/hygiene.ml" 67 1757 1764 "ocamlbuild/hygiene.ml" 67 1757 1780
type(
  bool
)
"ocamlbuild/hygiene.ml" 68 1786 1792 "ocamlbuild/hygiene.ml" 68 1786 1800
type(
  SS.t ref
)
ident(
  int_ref microbes "ocamlbuild/hygiene.ml" 60 1584 1590 "ocamlbuild/hygiene.ml" 60 1584 1598
)
"ocamlbuild/hygiene.ml" 68 1786 1801 "ocamlbuild/hygiene.ml" 68 1786 1803
type(
  SS.t ref -> SS.t -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"ocamlbuild/hygiene.ml" 68 1786 1804 "ocamlbuild/hygiene.ml" 68 1786 1810
type(
  SS.elt -> SS.t -> SS.t
)
ident(
  ext_ref SS.add
)
"ocamlbuild/hygiene.ml" 68 1786 1812 "ocamlbuild/hygiene.ml" 68 1786 1827
type(
  string -> string -> SS.elt
)
ident(
  ext_ref My_std.filename_concat
)
"ocamlbuild/hygiene.ml" 68 1786 1828 "ocamlbuild/hygiene.ml" 68 1786 1832
type(
  string
)
ident(
  int_ref path "ocamlbuild/hygiene.ml" 66 1732 1745 "ocamlbuild/hygiene.ml" 66 1732 1749
)
"ocamlbuild/hygiene.ml" 68 1786 1833 "ocamlbuild/hygiene.ml" 68 1786 1837
type(
  string
)
ident(
  int_ref name "ocamlbuild/hygiene.ml" 66 1732 1750 "ocamlbuild/hygiene.ml" 66 1732 1754
)
"ocamlbuild/hygiene.ml" 68 1786 1811 "ocamlbuild/hygiene.ml" 68 1786 1838
call(
  stack
)
type(
  SS.elt
)
"ocamlbuild/hygiene.ml" 68 1786 1839 "ocamlbuild/hygiene.ml" 68 1786 1840
type(
  SS.t ref -> SS.t
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/hygiene.ml" 68 1786 1840 "ocamlbuild/hygiene.ml" 68 1786 1848
type(
  SS.t ref
)
ident(
  int_ref microbes "ocamlbuild/hygiene.ml" 60 1584 1590 "ocamlbuild/hygiene.ml" 60 1584 1598
)
"ocamlbuild/hygiene.ml" 68 1786 1839 "ocamlbuild/hygiene.ml" 68 1786 1848
type(
  SS.t
)
"ocamlbuild/hygiene.ml" 68 1786 1804 "ocamlbuild/hygiene.ml" 68 1786 1848
call(
  stack
)
type(
  SS.t
)
"ocamlbuild/hygiene.ml" 68 1786 1792 "ocamlbuild/hygiene.ml" 68 1786 1848
type(
  unit
)
"ocamlbuild/hygiene.ml" 67 1757 1761 "ocamlbuild/hygiene.ml" 68 1786 1848
type(
  unit
)
"ocamlbuild/hygiene.ml" 70 1854 1860 "ocamlbuild/hygiene.ml" 70 1854 1870
type(
  bool Slurp.entry list -> rule -> string list
)
"ocamlbuild/hygiene.ml" 70 1854 1877 "ocamlbuild/hygiene.ml" 70 1854 1884
type(
  bool Slurp.entry list
)
ident(
  def entries "ocamlbuild/hygiene.ml" 70 1854 1888 "ocamlbuild/hygiene.ml" 111 3364 3381
)
"ocamlbuild/hygiene.ml" 71 1897 1907 "ocamlbuild/hygiene.ml" 71 1897 1913
type(
  pattern
)
ident(
  def suffix "ocamlbuild/hygiene.ml" 72 1917 1925 "ocamlbuild/hygiene.ml" 84 2338 2355
)
"ocamlbuild/hygiene.ml" 71 1897 1903 "ocamlbuild/hygiene.ml" 71 1897 1913
type(
  rule
)
"ocamlbuild/hygiene.ml" 72 1917 1925 "ocamlbuild/hygiene.ml" 72 1917 1937
type(
  (bool Slurp.entry -> string option) -> bool Slurp.entry list -> string list
)
ident(
  int_ref list_collect "ocamlbuild/hygiene.ml" 34 1070 1074 "ocamlbuild/hygiene.ml" 34 1070 1086
)
"ocamlbuild/hygiene.ml" 74 1963 1982 "ocamlbuild/hygiene.ml" 74 1963 1986
type(
  string
)
ident(
  def path "ocamlbuild/hygiene.ml" 75 2006 2022 "ocamlbuild/hygiene.ml" 81 2245 2267
)
"ocamlbuild/hygiene.ml" 74 1963 1988 "ocamlbuild/hygiene.ml" 74 1963 1992
type(
  string
)
ident(
  def name "ocamlbuild/hygiene.ml" 75 2006 2022 "ocamlbuild/hygiene.ml" 81 2245 2267
)
"ocamlbuild/hygiene.ml" 74 1963 1994 "ocamlbuild/hygiene.ml" 74 1963 1995
type(
  My_unix.stats Lazy.t
)
"ocamlbuild/hygiene.ml" 74 1963 1997 "ocamlbuild/hygiene.ml" 74 1963 2001
type(
  bool
)
"ocamlbuild/hygiene.ml" 74 1963 1977 "ocamlbuild/hygiene.ml" 74 1963 2002
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 75 2006 2025 "ocamlbuild/hygiene.ml" 75 2006 2046
type(
  string -> pattern -> bool
)
ident(
  ext_ref Filename.check_suffix
)
"ocamlbuild/hygiene.ml" 75 2006 2047 "ocamlbuild/hygiene.ml" 75 2006 2051
type(
  string
)
ident(
  int_ref name "ocamlbuild/hygiene.ml" 74 1963 1988 "ocamlbuild/hygiene.ml" 74 1963 1992
)
"ocamlbuild/hygiene.ml" 75 2006 2052 "ocamlbuild/hygiene.ml" 75 2006 2058
type(
  pattern
)
ident(
  int_ref suffix "ocamlbuild/hygiene.ml" 71 1897 1907 "ocamlbuild/hygiene.ml" 71 1897 1913
)
"ocamlbuild/hygiene.ml" 75 2006 2025 "ocamlbuild/hygiene.ml" 75 2006 2058
call(
  stack
)
type(
  bool
)
"ocamlbuild/hygiene.ml" 77 2088 2108 "ocamlbuild/hygiene.ml" 77 2088 2114
type(
  string -> string -> unit
)
ident(
  int_ref remove "ocamlbuild/hygiene.ml" 66 1732 1738 "ocamlbuild/hygiene.ml" 66 1732 1744
)
"ocamlbuild/hygiene.ml" 77 2088 2115 "ocamlbuild/hygiene.ml" 77 2088 2119
type(
  string
)
ident(
  int_ref path "ocamlbuild/hygiene.ml" 74 1963 1982 "ocamlbuild/hygiene.ml" 74 1963 1986
)
"ocamlbuild/hygiene.ml" 77 2088 2120 "ocamlbuild/hygiene.ml" 77 2088 2124
type(
  string
)
ident(
  int_ref name "ocamlbuild/hygiene.ml" 74 1963 1988 "ocamlbuild/hygiene.ml" 74 1963 1992
)
"ocamlbuild/hygiene.ml" 77 2088 2108 "ocamlbuild/hygiene.ml" 77 2088 2124
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 78 2126 2151 "ocamlbuild/hygiene.ml" 78 2126 2153
type(
  (string -> string -> pattern -> string, unit, string) format ->
  string -> string -> pattern -> string
)
ident(
  int_ref sf "ocamlbuild/hygiene.ml" 54 1466 1470 "ocamlbuild/hygiene.ml" 54 1466 1472
)
"ocamlbuild/hygiene.ml" 78 2126 2154 "ocamlbuild/hygiene.ml" 78 2126 2183
type(
  (string -> string -> pattern -> string, unit, string) format
)
"ocamlbuild/hygiene.ml" 78 2126 2184 "ocamlbuild/hygiene.ml" 78 2126 2188
type(
  string
)
ident(
  int_ref name "ocamlbuild/hygiene.ml" 74 1963 1988 "ocamlbuild/hygiene.ml" 74 1963 1992
)
"ocamlbuild/hygiene.ml" 78 2126 2189 "ocamlbuild/hygiene.ml" 78 2126 2193
type(
  string
)
ident(
  int_ref path "ocamlbuild/hygiene.ml" 74 1963 1982 "ocamlbuild/hygiene.ml" 74 1963 1986
)
"ocamlbuild/hygiene.ml" 78 2126 2194 "ocamlbuild/hygiene.ml" 78 2126 2200
type(
  pattern
)
ident(
  int_ref suffix "ocamlbuild/hygiene.ml" 71 1897 1907 "ocamlbuild/hygiene.ml" 71 1897 1913
)
"ocamlbuild/hygiene.ml" 78 2126 2150 "ocamlbuild/hygiene.ml" 78 2126 2201
call(
  stack
)
type(
  string
)
"ocamlbuild/hygiene.ml" 78 2126 2146 "ocamlbuild/hygiene.ml" 78 2126 2201
type(
  string option
)
"ocamlbuild/hygiene.ml" 76 2064 2082 "ocamlbuild/hygiene.ml" 79 2202 2223
type(
  string option
)
"ocamlbuild/hygiene.ml" 81 2245 2263 "ocamlbuild/hygiene.ml" 81 2245 2267
type(
  string option
)
"ocamlbuild/hygiene.ml" 75 2006 2022 "ocamlbuild/hygiene.ml" 81 2245 2267
type(
  string option
)
"ocamlbuild/hygiene.ml" 82 2268 2287 "ocamlbuild/hygiene.ml" 82 2268 2288
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"ocamlbuild/hygiene.ml" 82 2268 2282 "ocamlbuild/hygiene.ml" 82 2268 2288
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 82 2268 2295 "ocamlbuild/hygiene.ml" 82 2268 2296
type(
  bool Slurp.entry list Lazy.t
)
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"ocamlbuild/hygiene.ml" 82 2268 2291 "ocamlbuild/hygiene.ml" 82 2268 2296
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 82 2268 2282 "ocamlbuild/hygiene.ml" 82 2268 2296
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 82 2268 2304 "ocamlbuild/hygiene.ml" 82 2268 2305
type(
  exn
)
"ocamlbuild/hygiene.ml" 82 2268 2298 "ocamlbuild/hygiene.ml" 82 2268 2305
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 82 2268 2282 "ocamlbuild/hygiene.ml" 82 2268 2305
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 82 2268 2308 "ocamlbuild/hygiene.ml" 82 2268 2315
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 82 2268 2282 "ocamlbuild/hygiene.ml" 82 2268 2315
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 82 2268 2319 "ocamlbuild/hygiene.ml" 82 2268 2323
type(
  string option
)
"ocamlbuild/hygiene.ml" 73 1938 1948 "ocamlbuild/hygiene.ml" 83 2324 2337
type(
  bool Slurp.entry -> string option
)
"ocamlbuild/hygiene.ml" 84 2338 2348 "ocamlbuild/hygiene.ml" 84 2338 2355
type(
  bool Slurp.entry list
)
ident(
  int_ref entries "ocamlbuild/hygiene.ml" 70 1854 1877 "ocamlbuild/hygiene.ml" 70 1854 1884
)
"ocamlbuild/hygiene.ml" 72 1917 1925 "ocamlbuild/hygiene.ml" 84 2338 2355
call(
  tail
)
type(
  string list
)
"ocamlbuild/hygiene.ml" 85 2356 2374 "ocamlbuild/hygiene.ml" 85 2356 2381
type(
  pattern
)
ident(
  def suffix1 "ocamlbuild/hygiene.ml" 86 2395 2403 "ocamlbuild/hygiene.ml" 111 3364 3381
)
"ocamlbuild/hygiene.ml" 85 2356 2383 "ocamlbuild/hygiene.ml" 85 2356 2390
type(
  pattern
)
ident(
  def suffix2 "ocamlbuild/hygiene.ml" 86 2395 2403 "ocamlbuild/hygiene.ml" 111 3364 3381
)
"ocamlbuild/hygiene.ml" 85 2356 2362 "ocamlbuild/hygiene.ml" 85 2356 2391
type(
  rule
)
"ocamlbuild/hygiene.ml" 86 2395 2403 "ocamlbuild/hygiene.ml" 86 2395 2415
type(
  (bool Slurp.entry -> string option) -> bool Slurp.entry list -> string list
)
ident(
  int_ref list_collect "ocamlbuild/hygiene.ml" 34 1070 1074 "ocamlbuild/hygiene.ml" 34 1070 1086
)
"ocamlbuild/hygiene.ml" 88 2441 2460 "ocamlbuild/hygiene.ml" 88 2441 2464
type(
  string
)
ident(
  def path "ocamlbuild/hygiene.ml" 89 2484 2500 "ocamlbuild/hygiene.ml" 108 3270 3292
)
"ocamlbuild/hygiene.ml" 88 2441 2466 "ocamlbuild/hygiene.ml" 88 2441 2470
type(
  string
)
ident(
  def name "ocamlbuild/hygiene.ml" 89 2484 2500 "ocamlbuild/hygiene.ml" 108 3270 3292
)
"ocamlbuild/hygiene.ml" 88 2441 2472 "ocamlbuild/hygiene.ml" 88 2441 2473
type(
  My_unix.stats Lazy.t
)
"ocamlbuild/hygiene.ml" 88 2441 2475 "ocamlbuild/hygiene.ml" 88 2441 2479
type(
  bool
)
"ocamlbuild/hygiene.ml" 88 2441 2455 "ocamlbuild/hygiene.ml" 88 2441 2480
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 89 2484 2503 "ocamlbuild/hygiene.ml" 89 2484 2524
type(
  string -> pattern -> bool
)
ident(
  ext_ref Filename.check_suffix
)
"ocamlbuild/hygiene.ml" 89 2484 2525 "ocamlbuild/hygiene.ml" 89 2484 2529
type(
  string
)
ident(
  int_ref name "ocamlbuild/hygiene.ml" 88 2441 2466 "ocamlbuild/hygiene.ml" 88 2441 2470
)
"ocamlbuild/hygiene.ml" 89 2484 2530 "ocamlbuild/hygiene.ml" 89 2484 2537
type(
  pattern
)
ident(
  int_ref suffix1 "ocamlbuild/hygiene.ml" 85 2356 2374 "ocamlbuild/hygiene.ml" 85 2356 2381
)
"ocamlbuild/hygiene.ml" 89 2484 2503 "ocamlbuild/hygiene.ml" 89 2484 2537
call(
  stack
)
type(
  bool
)
"ocamlbuild/hygiene.ml" 91 2567 2591 "ocamlbuild/hygiene.ml" 91 2567 2595
type(
  string
)
ident(
  def base "ocamlbuild/hygiene.ml" 92 2635 2655 "ocamlbuild/hygiene.ml" 105 3200 3226
)
"ocamlbuild/hygiene.ml" 91 2567 2598 "ocamlbuild/hygiene.ml" 91 2567 2618
type(
  string -> pattern -> string
)
ident(
  ext_ref Filename.chop_suffix
)
"ocamlbuild/hygiene.ml" 91 2567 2619 "ocamlbuild/hygiene.ml" 91 2567 2623
type(
  string
)
ident(
  int_ref name "ocamlbuild/hygiene.ml" 88 2441 2466 "ocamlbuild/hygiene.ml" 88 2441 2470
)
"ocamlbuild/hygiene.ml" 91 2567 2624 "ocamlbuild/hygiene.ml" 91 2567 2631
type(
  pattern
)
ident(
  int_ref suffix1 "ocamlbuild/hygiene.ml" 85 2356 2374 "ocamlbuild/hygiene.ml" 85 2356 2381
)
"ocamlbuild/hygiene.ml" 91 2567 2598 "ocamlbuild/hygiene.ml" 91 2567 2631
call(
  stack
)
type(
  string
)
"ocamlbuild/hygiene.ml" 92 2635 2659 "ocamlbuild/hygiene.ml" 92 2635 2664
type(
  string
)
ident(
  def name' "ocamlbuild/hygiene.ml" 93 2685 2705 "ocamlbuild/hygiene.ml" 105 3200 3226
)
"ocamlbuild/hygiene.ml" 92 2635 2667 "ocamlbuild/hygiene.ml" 92 2635 2671
type(
  string
)
ident(
  int_ref base "ocamlbuild/hygiene.ml" 91 2567 2591 "ocamlbuild/hygiene.ml" 91 2567 2595
)
"ocamlbuild/hygiene.ml" 92 2635 2672 "ocamlbuild/hygiene.ml" 92 2635 2673
type(
  string -> pattern -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"ocamlbuild/hygiene.ml" 92 2635 2674 "ocamlbuild/hygiene.ml" 92 2635 2681
type(
  pattern
)
ident(
  int_ref suffix2 "ocamlbuild/hygiene.ml" 85 2356 2383 "ocamlbuild/hygiene.ml" 85 2356 2390
)
"ocamlbuild/hygiene.ml" 92 2635 2667 "ocamlbuild/hygiene.ml" 92 2635 2681
call(
  stack
)
type(
  string
)
"ocamlbuild/hygiene.ml" 93 2685 2708 "ocamlbuild/hygiene.ml" 93 2685 2719
type(
  (bool Slurp.entry -> bool) -> bool Slurp.entry list -> bool
)
ident(
  ext_ref My_std.List.exists
)
"ocamlbuild/hygiene.ml" 95 2758 2790 "ocamlbuild/hygiene.ml" 95 2758 2791
type(
  string
)
"ocamlbuild/hygiene.ml" 95 2758 2793 "ocamlbuild/hygiene.ml" 95 2758 2799
type(
  string
)
ident(
  def name'' "ocamlbuild/hygiene.ml" 95 2758 2813 "ocamlbuild/hygiene.ml" 95 2758 2827
)
"ocamlbuild/hygiene.ml" 95 2758 2801 "ocamlbuild/hygiene.ml" 95 2758 2802
type(
  My_unix.stats Lazy.t
)
"ocamlbuild/hygiene.ml" 95 2758 2804 "ocamlbuild/hygiene.ml" 95 2758 2808
type(
  bool
)
"ocamlbuild/hygiene.ml" 95 2758 2785 "ocamlbuild/hygiene.ml" 95 2758 2809
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 95 2758 2813 "ocamlbuild/hygiene.ml" 95 2758 2818
type(
  string
)
ident(
  int_ref name' "ocamlbuild/hygiene.ml" 92 2635 2659 "ocamlbuild/hygiene.ml" 92 2635 2664
)
"ocamlbuild/hygiene.ml" 95 2758 2819 "ocamlbuild/hygiene.ml" 95 2758 2820
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"ocamlbuild/hygiene.ml" 95 2758 2821 "ocamlbuild/hygiene.ml" 95 2758 2827
type(
  string
)
ident(
  int_ref name'' "ocamlbuild/hygiene.ml" 95 2758 2793 "ocamlbuild/hygiene.ml" 95 2758 2799
)
"ocamlbuild/hygiene.ml" 95 2758 2813 "ocamlbuild/hygiene.ml" 95 2758 2827
type(
  bool
)
"ocamlbuild/hygiene.ml" 96 2828 2860 "ocamlbuild/hygiene.ml" 96 2828 2861
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"ocamlbuild/hygiene.ml" 96 2828 2855 "ocamlbuild/hygiene.ml" 96 2828 2861
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 96 2828 2868 "ocamlbuild/hygiene.ml" 96 2828 2869
type(
  bool Slurp.entry list Lazy.t
)
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"ocamlbuild/hygiene.ml" 96 2828 2864 "ocamlbuild/hygiene.ml" 96 2828 2869
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 96 2828 2855 "ocamlbuild/hygiene.ml" 96 2828 2869
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 96 2828 2878 "ocamlbuild/hygiene.ml" 96 2828 2879
type(
  exn
)
"ocamlbuild/hygiene.ml" 96 2828 2872 "ocamlbuild/hygiene.ml" 96 2828 2879
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 96 2828 2855 "ocamlbuild/hygiene.ml" 96 2828 2879
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 96 2828 2882 "ocamlbuild/hygiene.ml" 96 2828 2889
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 96 2828 2855 "ocamlbuild/hygiene.ml" 96 2828 2889
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 96 2828 2893 "ocamlbuild/hygiene.ml" 96 2828 2898
type(
  bool
)
"ocamlbuild/hygiene.ml" 94 2720 2743 "ocamlbuild/hygiene.ml" 97 2899 2925
type(
  bool Slurp.entry -> bool
)
"ocamlbuild/hygiene.ml" 98 2926 2949 "ocamlbuild/hygiene.ml" 98 2926 2956
type(
  bool Slurp.entry list
)
ident(
  int_ref entries "ocamlbuild/hygiene.ml" 70 1854 1877 "ocamlbuild/hygiene.ml" 70 1854 1884
)
"ocamlbuild/hygiene.ml" 93 2685 2708 "ocamlbuild/hygiene.ml" 98 2926 2956
call(
  stack
)
type(
  bool
)
"ocamlbuild/hygiene.ml" 101 3010 3034 "ocamlbuild/hygiene.ml" 101 3010 3040
type(
  string -> string -> unit
)
ident(
  int_ref remove "ocamlbuild/hygiene.ml" 66 1732 1738 "ocamlbuild/hygiene.ml" 66 1732 1744
)
"ocamlbuild/hygiene.ml" 101 3010 3041 "ocamlbuild/hygiene.ml" 101 3010 3045
type(
  string
)
ident(
  int_ref path "ocamlbuild/hygiene.ml" 88 2441 2460 "ocamlbuild/hygiene.ml" 88 2441 2464
)
"ocamlbuild/hygiene.ml" 101 3010 3046 "ocamlbuild/hygiene.ml" 101 3010 3051
type(
  string
)
ident(
  int_ref name' "ocamlbuild/hygiene.ml" 92 2635 2659 "ocamlbuild/hygiene.ml" 92 2635 2664
)
"ocamlbuild/hygiene.ml" 101 3010 3034 "ocamlbuild/hygiene.ml" 101 3010 3051
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 102 3053 3082 "ocamlbuild/hygiene.ml" 102 3053 3084
type(
  (string -> string -> string -> string, unit, string) format ->
  string -> string -> string -> string
)
ident(
  int_ref sf "ocamlbuild/hygiene.ml" 54 1466 1470 "ocamlbuild/hygiene.ml" 54 1466 1472
)
"ocamlbuild/hygiene.ml" 102 3053 3085 "ocamlbuild/hygiene.ml" 102 3053 3131
type(
  (string -> string -> string -> string, unit, string) format
)
"ocamlbuild/hygiene.ml" 102 3053 3132 "ocamlbuild/hygiene.ml" 102 3053 3136
type(
  string
)
ident(
  int_ref name "ocamlbuild/hygiene.ml" 88 2441 2466 "ocamlbuild/hygiene.ml" 88 2441 2470
)
"ocamlbuild/hygiene.ml" 102 3053 3137 "ocamlbuild/hygiene.ml" 102 3053 3142
type(
  string
)
ident(
  int_ref name' "ocamlbuild/hygiene.ml" 92 2635 2659 "ocamlbuild/hygiene.ml" 92 2635 2664
)
"ocamlbuild/hygiene.ml" 102 3053 3143 "ocamlbuild/hygiene.ml" 102 3053 3147
type(
  string
)
ident(
  int_ref path "ocamlbuild/hygiene.ml" 88 2441 2460 "ocamlbuild/hygiene.ml" 88 2441 2464
)
"ocamlbuild/hygiene.ml" 102 3053 3081 "ocamlbuild/hygiene.ml" 102 3053 3148
call(
  stack
)
type(
  string
)
"ocamlbuild/hygiene.ml" 102 3053 3077 "ocamlbuild/hygiene.ml" 102 3053 3148
type(
  string option
)
"ocamlbuild/hygiene.ml" 100 2982 3004 "ocamlbuild/hygiene.ml" 103 3149 3174
type(
  string option
)
"ocamlbuild/hygiene.ml" 105 3200 3222 "ocamlbuild/hygiene.ml" 105 3200 3226
type(
  string option
)
"ocamlbuild/hygiene.ml" 93 2685 2705 "ocamlbuild/hygiene.ml" 105 3200 3226
type(
  string option
)
"ocamlbuild/hygiene.ml" 92 2635 2655 "ocamlbuild/hygiene.ml" 105 3200 3226
type(
  string option
)
"ocamlbuild/hygiene.ml" 90 2543 2561 "ocamlbuild/hygiene.ml" 106 3227 3248
type(
  string option
)
"ocamlbuild/hygiene.ml" 108 3270 3288 "ocamlbuild/hygiene.ml" 108 3270 3292
type(
  string option
)
"ocamlbuild/hygiene.ml" 89 2484 2500 "ocamlbuild/hygiene.ml" 108 3270 3292
type(
  string option
)
"ocamlbuild/hygiene.ml" 109 3293 3312 "ocamlbuild/hygiene.ml" 109 3293 3313
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"ocamlbuild/hygiene.ml" 109 3293 3307 "ocamlbuild/hygiene.ml" 109 3293 3313
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 109 3293 3320 "ocamlbuild/hygiene.ml" 109 3293 3321
type(
  bool Slurp.entry list Lazy.t
)
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"ocamlbuild/hygiene.ml" 109 3293 3316 "ocamlbuild/hygiene.ml" 109 3293 3321
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 109 3293 3307 "ocamlbuild/hygiene.ml" 109 3293 3321
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 109 3293 3330 "ocamlbuild/hygiene.ml" 109 3293 3331
type(
  exn
)
"ocamlbuild/hygiene.ml" 109 3293 3324 "ocamlbuild/hygiene.ml" 109 3293 3331
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 109 3293 3307 "ocamlbuild/hygiene.ml" 109 3293 3331
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 109 3293 3334 "ocamlbuild/hygiene.ml" 109 3293 3341
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 109 3293 3307 "ocamlbuild/hygiene.ml" 109 3293 3341
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 109 3293 3345 "ocamlbuild/hygiene.ml" 109 3293 3349
type(
  string option
)
"ocamlbuild/hygiene.ml" 87 2416 2426 "ocamlbuild/hygiene.ml" 110 3350 3363
type(
  bool Slurp.entry -> string option
)
"ocamlbuild/hygiene.ml" 111 3364 3374 "ocamlbuild/hygiene.ml" 111 3364 3381
type(
  bool Slurp.entry list
)
ident(
  int_ref entries "ocamlbuild/hygiene.ml" 70 1854 1877 "ocamlbuild/hygiene.ml" 70 1854 1884
)
"ocamlbuild/hygiene.ml" 86 2395 2403 "ocamlbuild/hygiene.ml" 111 3364 3381
call(
  tail
)
type(
  string list
)
"ocamlbuild/hygiene.ml" 70 1854 1888 "ocamlbuild/hygiene.ml" 111 3364 3381
type(
  rule -> string list
)
"ocamlbuild/hygiene.ml" 70 1854 1873 "ocamlbuild/hygiene.ml" 111 3364 3381
type(
  bool Slurp.entry list -> rule -> string list
)
"ocamlbuild/hygiene.ml" 113 3387 3397 "ocamlbuild/hygiene.ml" 113 3387 3408
type(
  bool Slurp.entry -> unit
)
"ocamlbuild/hygiene.ml" 114 3420 3430 "ocamlbuild/hygiene.ml" 114 3420 3431
type(
  string
)
"ocamlbuild/hygiene.ml" 114 3420 3432 "ocamlbuild/hygiene.ml" 114 3420 3433
type(
  string
)
"ocamlbuild/hygiene.ml" 114 3420 3434 "ocamlbuild/hygiene.ml" 114 3420 3435
type(
  My_unix.stats Lazy.t
)
"ocamlbuild/hygiene.ml" 114 3420 3436 "ocamlbuild/hygiene.ml" 114 3420 3440
type(
  bool
)
"ocamlbuild/hygiene.ml" 114 3420 3441 "ocamlbuild/hygiene.ml" 114 3420 3448
type(
  bool Slurp.entry list Lazy.t
)
ident(
  def entries "ocamlbuild/hygiene.ml" 115 3453 3461 "ocamlbuild/hygiene.ml" 123 3725 3764
)
"ocamlbuild/hygiene.ml" 114 3420 3426 "ocamlbuild/hygiene.ml" 114 3420 3449
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 115 3453 3461 "ocamlbuild/hygiene.ml" 115 3453 3470
type(
  (law -> unit) -> law list -> unit
)
ident(
  ext_ref My_std.List.iter
)
"ocamlbuild/hygiene.ml" 116 3471 3491 "ocamlbuild/hygiene.ml" 116 3471 3494
type(
  law
)
ident(
  def law "ocamlbuild/hygiene.ml" 117 3498 3510 "ocamlbuild/hygiene.ml" 120 3634 3694
)
"ocamlbuild/hygiene.ml" 117 3498 3516 "ocamlbuild/hygiene.ml" 117 3498 3527
type(
  string list list -> string list
)
ident(
  ext_ref My_std.List.concat
)
"ocamlbuild/hygiene.ml" 117 3498 3529 "ocamlbuild/hygiene.ml" 117 3498 3537
type(
  (rule -> string list) -> rule list -> string list list
)
ident(
  ext_ref My_std.List.map
)
"ocamlbuild/hygiene.ml" 117 3498 3539 "ocamlbuild/hygiene.ml" 117 3498 3549
type(
  bool Slurp.entry list -> rule -> string list
)
ident(
  int_ref check_rule "ocamlbuild/hygiene.ml" 70 1854 1860 "ocamlbuild/hygiene.ml" 70 1854 1870
)
"ocamlbuild/hygiene.ml" 117 3498 3550 "ocamlbuild/hygiene.ml" 117 3498 3552
type(
  bool Slurp.entry list Lazy.t -> bool Slurp.entry list
)
ident(
  ext_ref My_std.( !* )
)
"ocamlbuild/hygiene.ml" 117 3498 3552 "ocamlbuild/hygiene.ml" 117 3498 3559
type(
  bool Slurp.entry list Lazy.t
)
ident(
  int_ref entries "ocamlbuild/hygiene.ml" 114 3420 3441 "ocamlbuild/hygiene.ml" 114 3420 3448
)
"ocamlbuild/hygiene.ml" 117 3498 3550 "ocamlbuild/hygiene.ml" 117 3498 3559
call(
  stack
)
type(
  bool Slurp.entry list
)
"ocamlbuild/hygiene.ml" 117 3498 3538 "ocamlbuild/hygiene.ml" 117 3498 3560
call(
  stack
)
type(
  rule -> string list
)
"ocamlbuild/hygiene.ml" 117 3498 3561 "ocamlbuild/hygiene.ml" 117 3498 3564
type(
  law
)
ident(
  int_ref law "ocamlbuild/hygiene.ml" 116 3471 3491 "ocamlbuild/hygiene.ml" 116 3471 3494
)
"ocamlbuild/hygiene.ml" 117 3498 3561 "ocamlbuild/hygiene.ml" 117 3498 3574
type(
  rule list
)
"ocamlbuild/hygiene.ml" 117 3498 3528 "ocamlbuild/hygiene.ml" 117 3498 3575
call(
  stack
)
type(
  string list list
)
"ocamlbuild/hygiene.ml" 117 3498 3516 "ocamlbuild/hygiene.ml" 117 3498 3575
call(
  stack
)
type(
  string list
)
"ocamlbuild/hygiene.ml" 118 3581 3595 "ocamlbuild/hygiene.ml" 118 3581 3597
type(
  string list
)
"ocamlbuild/hygiene.ml" 118 3581 3601 "ocamlbuild/hygiene.ml" 118 3581 3603
type(
  unit
)
"ocamlbuild/hygiene.ml" 119 3604 3618 "ocamlbuild/hygiene.ml" 119 3604 3630
type(
  string list
)
ident(
  def explanations "ocamlbuild/hygiene.ml" 120 3634 3648 "ocamlbuild/hygiene.ml" 120 3634 3694
)
"ocamlbuild/hygiene.ml" 120 3634 3648 "ocamlbuild/hygiene.ml" 120 3634 3657
type(
  (law * string list) list ref
)
ident(
  int_ref penalties "ocamlbuild/hygiene.ml" 59 1556 1562 "ocamlbuild/hygiene.ml" 59 1556 1571
)
"ocamlbuild/hygiene.ml" 120 3634 3658 "ocamlbuild/hygiene.ml" 120 3634 3660
type(
  (law * string list) list ref -> (law * string list) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"ocamlbuild/hygiene.ml" 120 3634 3662 "ocamlbuild/hygiene.ml" 120 3634 3665
type(
  law
)
ident(
  int_ref law "ocamlbuild/hygiene.ml" 116 3471 3491 "ocamlbuild/hygiene.ml" 116 3471 3494
)
"ocamlbuild/hygiene.ml" 120 3634 3667 "ocamlbuild/hygiene.ml" 120 3634 3679
type(
  string list
)
ident(
  int_ref explanations "ocamlbuild/hygiene.ml" 119 3604 3618 "ocamlbuild/hygiene.ml" 119 3604 3630
)
"ocamlbuild/hygiene.ml" 120 3634 3661 "ocamlbuild/hygiene.ml" 120 3634 3680
type(
  law * string list
)
"ocamlbuild/hygiene.ml" 120 3634 3684 "ocamlbuild/hygiene.ml" 120 3634 3685
type(
  (law * string list) list ref -> (law * string list) list
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/hygiene.ml" 120 3634 3685 "ocamlbuild/hygiene.ml" 120 3634 3694
type(
  (law * string list) list ref
)
ident(
  int_ref penalties "ocamlbuild/hygiene.ml" 59 1556 1562 "ocamlbuild/hygiene.ml" 59 1556 1571
)
"ocamlbuild/hygiene.ml" 120 3634 3684 "ocamlbuild/hygiene.ml" 120 3634 3694
type(
  (law * string list) list
)
"ocamlbuild/hygiene.ml" 120 3634 3661 "ocamlbuild/hygiene.ml" 120 3634 3694
type(
  (law * string list) list
)
"ocamlbuild/hygiene.ml" 120 3634 3648 "ocamlbuild/hygiene.ml" 120 3634 3694
type(
  unit
)
"ocamlbuild/hygiene.ml" 117 3498 3510 "ocamlbuild/hygiene.ml" 120 3634 3694
type(
  unit
)
"ocamlbuild/hygiene.ml" 116 3471 3481 "ocamlbuild/hygiene.ml" 121 3695 3708
type(
  law -> unit
)
"ocamlbuild/hygiene.ml" 122 3709 3719 "ocamlbuild/hygiene.ml" 122 3709 3723
type(
  law list
)
ident(
  int_ref laws "ocamlbuild/hygiene.ml" 58 1523 1543 "ocamlbuild/hygiene.ml" 58 1523 1547
)
"ocamlbuild/hygiene.ml" 115 3453 3461 "ocamlbuild/hygiene.ml" 122 3709 3723
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 123 3725 3733 "ocamlbuild/hygiene.ml" 123 3725 3742
type(
  (bool Slurp.entry -> unit) -> bool Slurp.entry list -> unit
)
ident(
  ext_ref My_std.List.iter
)
"ocamlbuild/hygiene.ml" 123 3725 3743 "ocamlbuild/hygiene.ml" 123 3725 3754
type(
  bool Slurp.entry -> unit
)
ident(
  int_ref check_entry "ocamlbuild/hygiene.ml" 113 3387 3397 "ocamlbuild/hygiene.ml" 113 3387 3408
)
"ocamlbuild/hygiene.ml" 123 3725 3755 "ocamlbuild/hygiene.ml" 123 3725 3757
type(
  bool Slurp.entry list Lazy.t -> bool Slurp.entry list
)
ident(
  ext_ref My_std.( !* )
)
"ocamlbuild/hygiene.ml" 123 3725 3757 "ocamlbuild/hygiene.ml" 123 3725 3764
type(
  bool Slurp.entry list Lazy.t
)
ident(
  int_ref entries "ocamlbuild/hygiene.ml" 114 3420 3441 "ocamlbuild/hygiene.ml" 114 3420 3448
)
"ocamlbuild/hygiene.ml" 123 3725 3755 "ocamlbuild/hygiene.ml" 123 3725 3764
call(
  stack
)
type(
  bool Slurp.entry list
)
"ocamlbuild/hygiene.ml" 123 3725 3733 "ocamlbuild/hygiene.ml" 123 3725 3764
call(
  tail
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 115 3453 3461 "ocamlbuild/hygiene.ml" 123 3725 3764
type(
  unit
)
"ocamlbuild/hygiene.ml" 124 3765 3775 "ocamlbuild/hygiene.ml" 124 3765 3776
type(
  bool Slurp.entry list Lazy.t
)
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"ocamlbuild/hygiene.ml" 124 3765 3771 "ocamlbuild/hygiene.ml" 124 3765 3776
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 124 3765 3784 "ocamlbuild/hygiene.ml" 124 3765 3785
type(
  bool
)
type(
  My_unix.stats Lazy.t
)
type(
  string
)
type(
  string
)
"ocamlbuild/hygiene.ml" 124 3765 3779 "ocamlbuild/hygiene.ml" 124 3765 3785
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 124 3765 3771 "ocamlbuild/hygiene.ml" 124 3765 3785
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 124 3765 3794 "ocamlbuild/hygiene.ml" 124 3765 3795
type(
  exn
)
"ocamlbuild/hygiene.ml" 124 3765 3788 "ocamlbuild/hygiene.ml" 124 3765 3795
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 124 3765 3771 "ocamlbuild/hygiene.ml" 124 3765 3795
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 124 3765 3798 "ocamlbuild/hygiene.ml" 124 3765 3805
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 124 3765 3771 "ocamlbuild/hygiene.ml" 124 3765 3805
type(
  bool Slurp.entry
)
"ocamlbuild/hygiene.ml" 124 3765 3809 "ocamlbuild/hygiene.ml" 124 3765 3811
type(
  unit
)
"ocamlbuild/hygiene.ml" 113 3387 3411 "ocamlbuild/hygiene.ml" 124 3765 3811
type(
  bool Slurp.entry -> unit
)
"ocamlbuild/hygiene.ml" 126 3817 3819 "ocamlbuild/hygiene.ml" 126 3817 3830
type(
  bool Slurp.entry -> unit
)
ident(
  int_ref check_entry "ocamlbuild/hygiene.ml" 113 3387 3397 "ocamlbuild/hygiene.ml" 113 3387 3408
)
"ocamlbuild/hygiene.ml" 126 3817 3831 "ocamlbuild/hygiene.ml" 126 3817 3836
type(
  bool Slurp.entry
)
ident(
  int_ref entry "ocamlbuild/hygiene.ml" 58 1523 1548 "ocamlbuild/hygiene.ml" 58 1523 1553
)
"ocamlbuild/hygiene.ml" 126 3817 3819 "ocamlbuild/hygiene.ml" 126 3817 3836
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 128 3846 3854 "ocamlbuild/hygiene.ml" 128 3846 3862
type(
  SS.t
)
"ocamlbuild/hygiene.ml" 128 3846 3865 "ocamlbuild/hygiene.ml" 128 3846 3866
type(
  SS.t ref -> SS.t
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/hygiene.ml" 128 3846 3866 "ocamlbuild/hygiene.ml" 128 3846 3874
type(
  SS.t ref
)
ident(
  int_ref microbes "ocamlbuild/hygiene.ml" 60 1584 1590 "ocamlbuild/hygiene.ml" 60 1584 1598
)
"ocamlbuild/hygiene.ml" 128 3846 3865 "ocamlbuild/hygiene.ml" 128 3846 3874
type(
  SS.t
)
"ocamlbuild/hygiene.ml" 129 3878 3885 "ocamlbuild/hygiene.ml" 129 3878 3888
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"ocamlbuild/hygiene.ml" 129 3878 3890 "ocamlbuild/hygiene.ml" 129 3878 3901
type(
  SS.t -> bool
)
ident(
  ext_ref SS.is_empty
)
"ocamlbuild/hygiene.ml" 129 3878 3902 "ocamlbuild/hygiene.ml" 129 3878 3910
type(
  SS.t
)
ident(
  int_ref microbes "ocamlbuild/hygiene.ml" 128 3846 3854 "ocamlbuild/hygiene.ml" 128 3846 3862
)
"ocamlbuild/hygiene.ml" 129 3878 3889 "ocamlbuild/hygiene.ml" 129 3878 3911
call(
  stack
)
type(
  bool
)
"ocamlbuild/hygiene.ml" 129 3878 3885 "ocamlbuild/hygiene.ml" 129 3878 3911
type(
  bool
)
"ocamlbuild/hygiene.ml" 131 3929 3943 "ocamlbuild/hygiene.ml" 131 3929 3951
type(
  string option
)
ident(
  int_ref sanitize "ocamlbuild/hygiene.ml" 58 1523 1534 "ocamlbuild/hygiene.ml" 58 1523 1542
)
"ocamlbuild/hygiene.ml" 132 3957 3967 "ocamlbuild/hygiene.ml" 132 3957 3971
type(
  string option
)
"ocamlbuild/hygiene.ml" 133 3975 3987 "ocamlbuild/hygiene.ml" 133 3975 3998
type(
  (unit, Format.formatter, unit) format -> unit
)
ident(
  ext_ref Log.eprintf
)
"ocamlbuild/hygiene.ml" 133 3975 3999 "ocamlbuild/hygiene.ml" 134 4073 4113
type(
  (unit, Format.formatter, unit) format
)
"ocamlbuild/hygiene.ml" 133 3975 3987 "ocamlbuild/hygiene.ml" 134 4073 4113
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 135 4115 4127 "ocamlbuild/hygiene.ml" 135 4115 4134
type(
  (SS.elt -> unit) -> SS.t -> unit
)
ident(
  ext_ref SS.iter
)
"ocamlbuild/hygiene.ml" 136 4135 4159 "ocamlbuild/hygiene.ml" 136 4135 4161
type(
  SS.elt
)
ident(
  def fn "ocamlbuild/hygiene.ml" 137 4165 4181 "ocamlbuild/hygiene.ml" 137 4165 4201
)
"ocamlbuild/hygiene.ml" 137 4165 4181 "ocamlbuild/hygiene.ml" 137 4165 4192
type(
  (SS.elt -> unit, Format.formatter, unit) format -> SS.elt -> unit
)
ident(
  ext_ref Log.eprintf
)
"ocamlbuild/hygiene.ml" 137 4165 4193 "ocamlbuild/hygiene.ml" 137 4165 4198
type(
  (SS.elt -> unit, Format.formatter, unit) format
)
"ocamlbuild/hygiene.ml" 137 4165 4199 "ocamlbuild/hygiene.ml" 137 4165 4201
type(
  SS.elt
)
ident(
  int_ref fn "ocamlbuild/hygiene.ml" 136 4135 4159 "ocamlbuild/hygiene.ml" 136 4135 4161
)
"ocamlbuild/hygiene.ml" 137 4165 4181 "ocamlbuild/hygiene.ml" 137 4165 4201
call(
  tail
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 136 4135 4149 "ocamlbuild/hygiene.ml" 138 4202 4219
type(
  SS.elt -> unit
)
"ocamlbuild/hygiene.ml" 139 4220 4234 "ocamlbuild/hygiene.ml" 139 4220 4242
type(
  SS.t
)
ident(
  int_ref microbes "ocamlbuild/hygiene.ml" 128 3846 3854 "ocamlbuild/hygiene.ml" 128 3846 3862
)
"ocamlbuild/hygiene.ml" 135 4115 4127 "ocamlbuild/hygiene.ml" 139 4220 4242
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 140 4244 4256 "ocamlbuild/hygiene.ml" 140 4244 4267
type(
  (unit, Format.formatter, unit) format -> unit
)
ident(
  ext_ref Log.eprintf
)
"ocamlbuild/hygiene.ml" 140 4244 4268 "ocamlbuild/hygiene.ml" 141 4349 4439
type(
  (unit, Format.formatter, unit) format
)
"ocamlbuild/hygiene.ml" 140 4244 4256 "ocamlbuild/hygiene.ml" 141 4349 4439
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 142 4441 4453 "ocamlbuild/hygiene.ml" 142 4441 4458
type(
  exn -> unit
)
ident(
  ext_ref Pervasives.raise
)
"ocamlbuild/hygiene.ml" 142 4441 4459 "ocamlbuild/hygiene.ml" 142 4441 4482
type(
  exn
)
"ocamlbuild/hygiene.ml" 142 4441 4453 "ocamlbuild/hygiene.ml" 142 4441 4482
type(
  unit
)
"ocamlbuild/hygiene.ml" 140 4244 4256 "ocamlbuild/hygiene.ml" 142 4441 4482
type(
  unit
)
"ocamlbuild/hygiene.ml" 135 4115 4127 "ocamlbuild/hygiene.ml" 142 4441 4482
type(
  unit
)
"ocamlbuild/hygiene.ml" 133 3975 3987 "ocamlbuild/hygiene.ml" 142 4441 4482
type(
  unit
)
"ocamlbuild/hygiene.ml" 143 4483 4498 "ocamlbuild/hygiene.ml" 143 4483 4500
type(
  string
)
ident(
  def fn "ocamlbuild/hygiene.ml" 144 4504 4516 "ocamlbuild/hygiene.ml" 168 5725 5749
)
"ocamlbuild/hygiene.ml" 143 4483 4493 "ocamlbuild/hygiene.ml" 143 4483 4500
type(
  string option
)
"ocamlbuild/hygiene.ml" 144 4504 4520 "ocamlbuild/hygiene.ml" 144 4504 4521
type(
  int
)
"ocamlbuild/hygiene.ml" 144 4504 4524 "ocamlbuild/hygiene.ml" 144 4504 4535
type(
  SS.t -> int
)
ident(
  ext_ref SS.cardinal
)
"ocamlbuild/hygiene.ml" 144 4504 4536 "ocamlbuild/hygiene.ml" 144 4504 4544
type(
  SS.t
)
ident(
  int_ref microbes "ocamlbuild/hygiene.ml" 128 3846 3854 "ocamlbuild/hygiene.ml" 128 3846 3862
)
"ocamlbuild/hygiene.ml" 144 4504 4524 "ocamlbuild/hygiene.ml" 144 4504 4544
call(
  stack
)
type(
  int
)
"ocamlbuild/hygiene.ml" 145 4548 4560 "ocamlbuild/hygiene.ml" 145 4548 4571
type(
  (int -> string -> string -> unit, Format.formatter, unit) format ->
  int -> string -> string -> unit
)
ident(
  ext_ref Log.eprintf
)
"ocamlbuild/hygiene.ml" 146 4572 4586 "ocamlbuild/hygiene.ml" 151 4957 5014
type(
  (int -> string -> string -> unit, Format.formatter, unit) format
)
"ocamlbuild/hygiene.ml" 152 5015 5030 "ocamlbuild/hygiene.ml" 152 5015 5031
type(
  int
)
ident(
  int_ref m "ocamlbuild/hygiene.ml" 144 4504 4520 "ocamlbuild/hygiene.ml" 144 4504 4521
)
"ocamlbuild/hygiene.ml" 152 5015 5036 "ocamlbuild/hygiene.ml" 152 5015 5037
type(
  int
)
ident(
  int_ref m "ocamlbuild/hygiene.ml" 144 4504 4520 "ocamlbuild/hygiene.ml" 144 4504 4521
)
"ocamlbuild/hygiene.ml" 152 5015 5038 "ocamlbuild/hygiene.ml" 152 5015 5039
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"ocamlbuild/hygiene.ml" 152 5015 5040 "ocamlbuild/hygiene.ml" 152 5015 5041
type(
  int
)
"ocamlbuild/hygiene.ml" 152 5015 5036 "ocamlbuild/hygiene.ml" 152 5015 5041
type(
  bool
)
"ocamlbuild/hygiene.ml" 152 5015 5047 "ocamlbuild/hygiene.ml" 152 5015 5049
type(
  string
)
"ocamlbuild/hygiene.ml" 152 5015 5055 "ocamlbuild/hygiene.ml" 152 5015 5058
type(
  string
)
"ocamlbuild/hygiene.ml" 152 5015 5032 "ocamlbuild/hygiene.ml" 152 5015 5059
type(
  string
)
"ocamlbuild/hygiene.ml" 152 5015 5060 "ocamlbuild/hygiene.ml" 152 5015 5062
type(
  string
)
ident(
  int_ref fn "ocamlbuild/hygiene.ml" 143 4483 4498 "ocamlbuild/hygiene.ml" 143 4483 4500
)
"ocamlbuild/hygiene.ml" 145 4548 4560 "ocamlbuild/hygiene.ml" 152 5015 5062
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 153 5064 5080 "ocamlbuild/hygiene.ml" 153 5064 5082
type(
  out_channel
)
"ocamlbuild/hygiene.ml" 153 5064 5085 "ocamlbuild/hygiene.ml" 153 5064 5097
type(
  open_flag list -> int -> string -> out_channel
)
ident(
  ext_ref Pervasives.open_out_gen
)
"ocamlbuild/hygiene.ml" 153 5064 5099 "ocamlbuild/hygiene.ml" 153 5064 5110
type(
  open_flag
)
"ocamlbuild/hygiene.ml" 153 5064 5112 "ocamlbuild/hygiene.ml" 153 5064 5122
type(
  open_flag
)
"ocamlbuild/hygiene.ml" 153 5064 5124 "ocamlbuild/hygiene.ml" 153 5064 5134
type(
  open_flag
)
"ocamlbuild/hygiene.ml" 153 5064 5136 "ocamlbuild/hygiene.ml" 153 5064 5145
type(
  open_flag
)
"ocamlbuild/hygiene.ml" 153 5064 5098 "ocamlbuild/hygiene.ml" 153 5064 5146
type(
  open_flag list
)
"ocamlbuild/hygiene.ml" 153 5064 5147 "ocamlbuild/hygiene.ml" 153 5064 5152
type(
  int
)
"ocamlbuild/hygiene.ml" 153 5064 5153 "ocamlbuild/hygiene.ml" 153 5064 5155
type(
  string
)
ident(
  int_ref fn "ocamlbuild/hygiene.ml" 143 4483 4498 "ocamlbuild/hygiene.ml" 143 4483 4500
)
"ocamlbuild/hygiene.ml" 153 5064 5085 "ocamlbuild/hygiene.ml" 153 5064 5155
call(
  stack
)
type(
  out_channel
)
"ocamlbuild/hygiene.ml" 154 5159 5175 "ocamlbuild/hygiene.ml" 154 5159 5177
type(
  out_channel -> ('a, out_channel, unit) format -> 'a
)
"ocamlbuild/hygiene.ml" 154 5159 5180 "ocamlbuild/hygiene.ml" 154 5159 5194
type(
  out_channel -> ('a, out_channel, unit) format -> 'a
)
ident(
  ext_ref Printf.fprintf
)
"ocamlbuild/hygiene.ml" 155 5198 5210 "ocamlbuild/hygiene.ml" 155 5198 5212
type(
  out_channel -> (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  int_ref fp "ocamlbuild/hygiene.ml" 154 5159 5175 "ocamlbuild/hygiene.ml" 154 5159 5177
)
"ocamlbuild/hygiene.ml" 155 5198 5213 "ocamlbuild/hygiene.ml" 155 5198 5215
type(
  out_channel
)
ident(
  int_ref oc "ocamlbuild/hygiene.ml" 153 5064 5080 "ocamlbuild/hygiene.ml" 153 5064 5082
)
"ocamlbuild/hygiene.ml" 155 5198 5216 "ocamlbuild/hygiene.ml" 159 5334 5356
type(
  (string -> unit, out_channel, unit) format
)
"ocamlbuild/hygiene.ml" 159 5334 5358 "ocamlbuild/hygiene.ml" 159 5334 5388
type(
  Pathname.t -> string
)
ident(
  ext_ref Shell.quote_filename_if_needed
)
"ocamlbuild/hygiene.ml" 159 5334 5389 "ocamlbuild/hygiene.ml" 159 5334 5401
type(
  Pathname.t
)
ident(
  ext_ref Pathname.pwd
)
"ocamlbuild/hygiene.ml" 159 5334 5357 "ocamlbuild/hygiene.ml" 159 5334 5402
call(
  stack
)
type(
  string
)
"ocamlbuild/hygiene.ml" 155 5198 5210 "ocamlbuild/hygiene.ml" 159 5334 5402
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 160 5404 5416 "ocamlbuild/hygiene.ml" 160 5404 5423
type(
  (SS.elt -> unit) -> SS.t -> unit
)
ident(
  ext_ref SS.iter
)
"ocamlbuild/hygiene.ml" 161 5424 5448 "ocamlbuild/hygiene.ml" 161 5424 5450
type(
  SS.elt
)
ident(
  def fn "ocamlbuild/hygiene.ml" 162 5454 5470 "ocamlbuild/hygiene.ml" 162 5454 5524
)
"ocamlbuild/hygiene.ml" 162 5454 5470 "ocamlbuild/hygiene.ml" 162 5454 5472
type(
  out_channel -> (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  int_ref fp "ocamlbuild/hygiene.ml" 154 5159 5175 "ocamlbuild/hygiene.ml" 154 5159 5177
)
"ocamlbuild/hygiene.ml" 162 5454 5473 "ocamlbuild/hygiene.ml" 162 5454 5475
type(
  out_channel
)
ident(
  int_ref oc "ocamlbuild/hygiene.ml" 153 5064 5080 "ocamlbuild/hygiene.ml" 153 5064 5082
)
"ocamlbuild/hygiene.ml" 162 5454 5476 "ocamlbuild/hygiene.ml" 162 5454 5488
type(
  (string -> unit, out_channel, unit) format
)
"ocamlbuild/hygiene.ml" 162 5454 5490 "ocamlbuild/hygiene.ml" 162 5454 5520
type(
  SS.elt -> string
)
ident(
  ext_ref Shell.quote_filename_if_needed
)
"ocamlbuild/hygiene.ml" 162 5454 5521 "ocamlbuild/hygiene.ml" 162 5454 5523
type(
  SS.elt
)
ident(
  int_ref fn "ocamlbuild/hygiene.ml" 161 5424 5448 "ocamlbuild/hygiene.ml" 161 5424 5450
)
"ocamlbuild/hygiene.ml" 162 5454 5489 "ocamlbuild/hygiene.ml" 162 5454 5524
call(
  stack
)
type(
  string
)
"ocamlbuild/hygiene.ml" 162 5454 5470 "ocamlbuild/hygiene.ml" 162 5454 5524
call(
  tail
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 161 5424 5438 "ocamlbuild/hygiene.ml" 163 5525 5542
type(
  SS.elt -> unit
)
"ocamlbuild/hygiene.ml" 164 5543 5557 "ocamlbuild/hygiene.ml" 164 5543 5565
type(
  SS.t
)
ident(
  int_ref microbes "ocamlbuild/hygiene.ml" 128 3846 3854 "ocamlbuild/hygiene.ml" 128 3846 3862
)
"ocamlbuild/hygiene.ml" 160 5404 5416 "ocamlbuild/hygiene.ml" 164 5543 5565
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 166 5603 5615 "ocamlbuild/hygiene.ml" 166 5603 5617
type(
  out_channel -> (unit, out_channel, unit) format -> unit
)
ident(
  int_ref fp "ocamlbuild/hygiene.ml" 154 5159 5175 "ocamlbuild/hygiene.ml" 154 5159 5177
)
"ocamlbuild/hygiene.ml" 166 5603 5618 "ocamlbuild/hygiene.ml" 166 5603 5620
type(
  out_channel
)
ident(
  int_ref oc "ocamlbuild/hygiene.ml" 153 5064 5080 "ocamlbuild/hygiene.ml" 153 5064 5082
)
"ocamlbuild/hygiene.ml" 166 5603 5621 "ocamlbuild/hygiene.ml" 166 5603 5655
type(
  (unit, out_channel, unit) format
)
"ocamlbuild/hygiene.ml" 166 5603 5615 "ocamlbuild/hygiene.ml" 166 5603 5655
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 167 5657 5669 "ocamlbuild/hygiene.ml" 167 5657 5671
type(
  out_channel -> (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  int_ref fp "ocamlbuild/hygiene.ml" 154 5159 5175 "ocamlbuild/hygiene.ml" 154 5159 5177
)
"ocamlbuild/hygiene.ml" 167 5657 5672 "ocamlbuild/hygiene.ml" 167 5657 5674
type(
  out_channel
)
ident(
  int_ref oc "ocamlbuild/hygiene.ml" 153 5064 5080 "ocamlbuild/hygiene.ml" 153 5064 5082
)
"ocamlbuild/hygiene.ml" 167 5657 5675 "ocamlbuild/hygiene.ml" 167 5657 5687
type(
  (string -> unit, out_channel, unit) format
)
"ocamlbuild/hygiene.ml" 167 5657 5689 "ocamlbuild/hygiene.ml" 167 5657 5719
type(
  string -> string
)
ident(
  ext_ref Shell.quote_filename_if_needed
)
"ocamlbuild/hygiene.ml" 167 5657 5720 "ocamlbuild/hygiene.ml" 167 5657 5722
type(
  string
)
ident(
  int_ref fn "ocamlbuild/hygiene.ml" 143 4483 4498 "ocamlbuild/hygiene.ml" 143 4483 4500
)
"ocamlbuild/hygiene.ml" 167 5657 5688 "ocamlbuild/hygiene.ml" 167 5657 5723
call(
  stack
)
type(
  string
)
"ocamlbuild/hygiene.ml" 167 5657 5669 "ocamlbuild/hygiene.ml" 167 5657 5723
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 168 5725 5737 "ocamlbuild/hygiene.ml" 168 5725 5746
type(
  out_channel -> unit
)
ident(
  ext_ref Pervasives.close_out
)
"ocamlbuild/hygiene.ml" 168 5725 5747 "ocamlbuild/hygiene.ml" 168 5725 5749
type(
  out_channel
)
ident(
  int_ref oc "ocamlbuild/hygiene.ml" 153 5064 5080 "ocamlbuild/hygiene.ml" 153 5064 5082
)
"ocamlbuild/hygiene.ml" 168 5725 5737 "ocamlbuild/hygiene.ml" 168 5725 5749
call(
  stack
)
type(
  unit
)
"ocamlbuild/hygiene.ml" 167 5657 5669 "ocamlbuild/hygiene.ml" 168 5725 5749
type(
  unit
)
"ocamlbuild/hygiene.ml" 166 5603 5615 "ocamlbuild/hygiene.ml" 168 5725 5749
type(
  unit
)
"ocamlbuild/hygiene.ml" 160 5404 5416 "ocamlbuild/hygiene.ml" 168 5725 5749
type(
  unit
)
"ocamlbuild/hygiene.ml" 155 5198 5210 "ocamlbuild/hygiene.ml" 168 5725 5749
type(
  unit
)
"ocamlbuild/hygiene.ml" 154 5159 5171 "ocamlbuild/hygiene.ml" 168 5725 5749
type(
  unit
)
"ocamlbuild/hygiene.ml" 153 5064 5076 "ocamlbuild/hygiene.ml" 168 5725 5749
type(
  unit
)
"ocamlbuild/hygiene.ml" 145 4548 4560 "ocamlbuild/hygiene.ml" 168 5725 5749
type(
  unit
)
"ocamlbuild/hygiene.ml" 144 4504 4516 "ocamlbuild/hygiene.ml" 168 5725 5749
type(
  unit
)
"ocamlbuild/hygiene.ml" 130 3917 3923 "ocamlbuild/hygiene.ml" 169 5750 5759
type(
  unit
)
"ocamlbuild/hygiene.ml" 129 3878 3882 "ocamlbuild/hygiene.ml" 169 5750 5759
type(
  unit
)
"ocamlbuild/hygiene.ml" 170 5761 5765 "ocamlbuild/hygiene.ml" 170 5761 5766
type(
  (law * string list) list ref -> (law * string list) list
)
ident(
  ext_ref Pervasives.( ! )
)
"ocamlbuild/hygiene.ml" 170 5761 5766 "ocamlbuild/hygiene.ml" 170 5761 5775
type(
  (law * string list) list ref
)
ident(
  int_ref penalties "ocamlbuild/hygiene.ml" 59 1556 1562 "ocamlbuild/hygiene.ml" 59 1556 1571
)
"ocamlbuild/hygiene.ml" 170 5761 5765 "ocamlbuild/hygiene.ml" 170 5761 5775
type(
  (law * string list) list
)
"ocamlbuild/hygiene.ml" 129 3878 3882 "ocamlbuild/hygiene.ml" 170 5761 5775
type(
  (law * string list) list
)
"ocamlbuild/hygiene.ml" 127 3838 3840 "ocamlbuild/hygiene.ml" 171 5776 5781
type(
  (law * string list) list
)
"ocamlbuild/hygiene.ml" 126 3817 3819 "ocamlbuild/hygiene.ml" 171 5776 5781
type(
  (law * string list) list
)
"ocamlbuild/hygiene.ml" 113 3387 3389 "ocamlbuild/hygiene.ml" 171 5776 5781
type(
  (law * string list) list
)
"ocamlbuild/hygiene.ml" 70 1854 1856 "ocamlbuild/hygiene.ml" 171 5776 5781
type(
  (law * string list) list
)
"ocamlbuild/hygiene.ml" 66 1732 1734 "ocamlbuild/hygiene.ml" 171 5776 5781
type(
  (law * string list) list
)
"ocamlbuild/hygiene.ml" 61 1617 1619 "ocamlbuild/hygiene.ml" 171 5776 5781
type(
  (law * string list) list
)
"ocamlbuild/hygiene.ml" 60 1584 1586 "ocamlbuild/hygiene.ml" 171 5776 5781
type(
  (law * string list) list
)
"ocamlbuild/hygiene.ml" 59 1556 1558 "ocamlbuild/hygiene.ml" 171 5776 5781
type(
  (law * string list) list
)
