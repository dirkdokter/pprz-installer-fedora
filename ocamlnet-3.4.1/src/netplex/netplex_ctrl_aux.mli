(************************************************************
 * WARNING!
 *
 * This file is generated by ocamlrpcgen from the source file
 * netplex_ctrl.x
 *
 ************************************************************)

(* Type definitions *)

type longstring = 
      string
and longstring_opt = 
      longstring option
and internal_port = 
      longstring option
and internal_ports = 
      longstring array
and message = 
      { 
        mutable msg_name : longstring;
        mutable msg_arguments : longstring array;
      }
and socket_id = 
      { 
        mutable sock_protocol : longstring;
        mutable sock_index : int;
      }
and socket_id_list = 
      socket_id array
and event_type = 
      Rtypes.int4
and event = 
      [ 
      | `event_none 
      | `event_accept 
      | `event_noaccept 
      | `event_received_message of (message) 
      | `event_received_admin_message of (message) 
      | `event_shutdown 
      | `event_system_shutdown 
      ]
and level = 
      Rtypes.int4
and t_Control'V1'ping'arg = 
      unit
and t_Control'V1'ping'res = 
      unit
and t_Control'V1'poll'arg = 
      ( int * bool )
and t_Control'V1'poll'res = 
      event
and t_Control'V1'accepted'arg = 
      unit
and t_Control'V1'accepted'res = 
      unit
and t_System'V1'ping'arg = 
      unit
and t_System'V1'ping'res = 
      unit
and t_System'V1'lookup'arg = 
      ( longstring * longstring )
and t_System'V1'lookup'res = 
      internal_port
and t_System'V1'send_message'arg = 
      ( longstring * message )
and t_System'V1'send_message'res = 
      unit
and t_System'V1'log'arg = 
      ( level * longstring * longstring )
and t_System'V1'log'res = 
      unit
and t_System'V1'call_plugin'arg = 
      ( int64 * longstring * longstring )
and t_System'V1'call_plugin'res = 
      longstring
and t_System'V1'register_container_socket'arg = 
      ( longstring * longstring * longstring )
and t_System'V1'register_container_socket'res = 
      unit
and t_System'V1'lookup_container_sockets'arg = 
      ( longstring * longstring )
and t_System'V1'lookup_container_sockets'res = 
      internal_ports
and t_System'V1'activate_lever'arg = 
      ( int * longstring )
and t_System'V1'activate_lever'res = 
      longstring
and result_code = 
      Rtypes.int4
and unit_result = 
      [ | `code_ok | `code_error of (longstring) ]
and socket_domain = 
      Rtypes.int4
and port = 
      [ 
      | `pf_unknown 
      | `pf_unix of (longstring) 
      | `pf_inet of (_t0) 
      | `pf_inet6 of (_t1) 
      ]
and port_list = 
      port array
and prot = 
      { 
        mutable prot_name : longstring;
        mutable prot_ports : port_list;
      }
and prot_list = 
      prot array
and srv_state = 
      Rtypes.int4
and cnt_state_enum = 
      Rtypes.int4
and cnt_state = 
      [ 
      | `cstate_accepting 
      | `cstate_selected 
      | `cstate_busy 
      | `cstate_starting 
      | `cstate_shutdown 
      ]
and container_info = 
      { 
        mutable cnt_id : int64;
        mutable cnt_sys_id : longstring;
        mutable cnt_state : cnt_state;
      }
and service_info = 
      { 
        mutable srv_name : longstring;
        mutable srv_protocols : prot_list;
        mutable srv_nr_containers : int;
        mutable srv_containers : container_info array;
        mutable srv_state : srv_state;
      }
and service_info_list = 
      service_info array
and t_Admin'V2'ping'arg = 
      unit
and t_Admin'V2'ping'res = 
      unit
and t_Admin'V2'list'arg = 
      unit
and t_Admin'V2'list'res = 
      service_info_list
and t_Admin'V2'enable'arg = 
      longstring
and t_Admin'V2'enable'res = 
      unit_result
and t_Admin'V2'disable'arg = 
      longstring
and t_Admin'V2'disable'res = 
      unit_result
and t_Admin'V2'restart'arg = 
      longstring
and t_Admin'V2'restart'res = 
      unit_result
and t_Admin'V2'restart_all'arg = 
      unit
and t_Admin'V2'restart_all'res = 
      unit_result
and t_Admin'V2'system_shutdown'arg = 
      unit
and t_Admin'V2'system_shutdown'res = 
      unit_result
and t_Admin'V2'reopen_logfiles'arg = 
      unit
and t_Admin'V2'reopen_logfiles'res = 
      unit_result
and t_Admin'V2'send_admin_message'arg = 
      ( longstring * message )
and t_Admin'V2'send_admin_message'res = 
      unit
and t_Semaphore'V1'ping'arg = 
      unit
and t_Semaphore'V1'ping'res = 
      unit
and t_Semaphore'V1'increment'arg = 
      longstring
and t_Semaphore'V1'increment'res = 
      int64
and t_Semaphore'V1'decrement'arg = 
      ( longstring * bool )
and t_Semaphore'V1'decrement'res = 
      int64
and t_Semaphore'V1'get'arg = 
      longstring
and t_Semaphore'V1'get'res = 
      int64
and t_Semaphore'V1'create'arg = 
      ( longstring * int64 * bool )
and t_Semaphore'V1'create'res = 
      bool
and t_Semaphore'V1'destroy'arg = 
      longstring
and t_Semaphore'V1'destroy'res = 
      unit
and shvar_enum = 
      Rtypes.int4
and shvar_code = 
      [ 
      | `shvar_ok 
      | `shvar_badtype 
      | `shvar_notfound 
      | `shvar_exists 
      | `shvar_noperm 
      ]
and shvar_get = 
      [ 
      | `shvar_ok of (longstring) 
      | `shvar_badtype 
      | `shvar_notfound 
      | `shvar_exists 
      | `shvar_noperm 
      ]
and t_Sharedvar'V1'ping'arg = 
      unit
and t_Sharedvar'V1'ping'res = 
      unit
and t_Sharedvar'V1'create_var'arg = 
      ( longstring * bool * bool * longstring )
and t_Sharedvar'V1'create_var'res = 
      shvar_code
and t_Sharedvar'V1'set_value'arg = 
      ( longstring * longstring * longstring )
and t_Sharedvar'V1'set_value'res = 
      shvar_code
and t_Sharedvar'V1'get_value'arg = 
      ( longstring * longstring )
and t_Sharedvar'V1'get_value'res = 
      shvar_get
and t_Sharedvar'V1'delete_var'arg = 
      longstring
and t_Sharedvar'V1'delete_var'res = 
      shvar_code
and t_Sharedvar'V1'wait_for_value'arg = 
      ( longstring * longstring )
and t_Sharedvar'V1'wait_for_value'res = 
      shvar_get
and t_Sharedvar'V1'dump'arg = 
      ( longstring * longstring )
and t_Sharedvar'V1'dump'res = 
      unit
and _t0 = 
      { 
        mutable inet_addr : longstring;
        mutable inet_port : int;
      }
and _t1 = 
      { 
        mutable inet6_addr : longstring;
        mutable inet6_port : int;
      }
;;

(* Constant definitions *)

val event_none : Rtypes.int4;;
val event_accept : Rtypes.int4;;
val event_noaccept : Rtypes.int4;;
val event_received_message : Rtypes.int4;;
val event_received_admin_message : Rtypes.int4;;
val event_shutdown : Rtypes.int4;;
val event_system_shutdown : Rtypes.int4;;
val log_emerg : Rtypes.int4;;
val log_alert : Rtypes.int4;;
val log_crit : Rtypes.int4;;
val log_err : Rtypes.int4;;
val log_warning : Rtypes.int4;;
val log_notice : Rtypes.int4;;
val log_info : Rtypes.int4;;
val log_debug : Rtypes.int4;;
val code_ok : Rtypes.int4;;
val code_error : Rtypes.int4;;
val pf_unknown : Rtypes.int4;;
val pf_unix : Rtypes.int4;;
val pf_inet : Rtypes.int4;;
val pf_inet6 : Rtypes.int4;;
val state_enabled : Rtypes.int4;;
val state_disabled : Rtypes.int4;;
val state_restarting : Rtypes.int4;;
val state_down : Rtypes.int4;;
val cstate_accepting : Rtypes.int4;;
val cstate_selected : Rtypes.int4;;
val cstate_busy : Rtypes.int4;;
val cstate_starting : Rtypes.int4;;
val cstate_shutdown : Rtypes.int4;;
val shvar_ok : Rtypes.int4;;
val shvar_badtype : Rtypes.int4;;
val shvar_notfound : Rtypes.int4;;
val shvar_exists : Rtypes.int4;;
val shvar_noperm : Rtypes.int4;;

(* Conversion functions *)

val _to_longstring : Xdr.xdr_value -> longstring;;
val _of_longstring : longstring -> Xdr.xdr_value;;
val _to_longstring_opt : Xdr.xdr_value -> longstring_opt;;
val _of_longstring_opt : longstring_opt -> Xdr.xdr_value;;
val _to_internal_port : Xdr.xdr_value -> internal_port;;
val _of_internal_port : internal_port -> Xdr.xdr_value;;
val _to_internal_ports : Xdr.xdr_value -> internal_ports;;
val _of_internal_ports : internal_ports -> Xdr.xdr_value;;
val _to_message : Xdr.xdr_value -> message;;
val _of_message : message -> Xdr.xdr_value;;
val _to_socket_id : Xdr.xdr_value -> socket_id;;
val _of_socket_id : socket_id -> Xdr.xdr_value;;
val _to_socket_id_list : Xdr.xdr_value -> socket_id_list;;
val _of_socket_id_list : socket_id_list -> Xdr.xdr_value;;
val _to_event_type : Xdr.xdr_value -> event_type;;
val _of_event_type : event_type -> Xdr.xdr_value;;
val _to_event : Xdr.xdr_value -> event;;
val _of_event : event -> Xdr.xdr_value;;
val _to_level : Xdr.xdr_value -> level;;
val _of_level : level -> Xdr.xdr_value;;
val _to_Control'V1'ping'arg : Xdr.xdr_value -> t_Control'V1'ping'arg;;
val _of_Control'V1'ping'arg : t_Control'V1'ping'arg -> Xdr.xdr_value;;
val _to_Control'V1'ping'res : Xdr.xdr_value -> t_Control'V1'ping'res;;
val _of_Control'V1'ping'res : t_Control'V1'ping'res -> Xdr.xdr_value;;
val _to_Control'V1'poll'arg : Xdr.xdr_value -> t_Control'V1'poll'arg;;
val _of_Control'V1'poll'arg : t_Control'V1'poll'arg -> Xdr.xdr_value;;
val _to_Control'V1'poll'res : Xdr.xdr_value -> t_Control'V1'poll'res;;
val _of_Control'V1'poll'res : t_Control'V1'poll'res -> Xdr.xdr_value;;
val _to_Control'V1'accepted'arg : Xdr.xdr_value -> t_Control'V1'accepted'arg;;
val _of_Control'V1'accepted'arg : t_Control'V1'accepted'arg -> Xdr.xdr_value;;
val _to_Control'V1'accepted'res : Xdr.xdr_value -> t_Control'V1'accepted'res;;
val _of_Control'V1'accepted'res : t_Control'V1'accepted'res -> Xdr.xdr_value;;
val _to_System'V1'ping'arg : Xdr.xdr_value -> t_System'V1'ping'arg;;
val _of_System'V1'ping'arg : t_System'V1'ping'arg -> Xdr.xdr_value;;
val _to_System'V1'ping'res : Xdr.xdr_value -> t_System'V1'ping'res;;
val _of_System'V1'ping'res : t_System'V1'ping'res -> Xdr.xdr_value;;
val _to_System'V1'lookup'arg : Xdr.xdr_value -> t_System'V1'lookup'arg;;
val _of_System'V1'lookup'arg : t_System'V1'lookup'arg -> Xdr.xdr_value;;
val _to_System'V1'lookup'res : Xdr.xdr_value -> t_System'V1'lookup'res;;
val _of_System'V1'lookup'res : t_System'V1'lookup'res -> Xdr.xdr_value;;
val _to_System'V1'send_message'arg : Xdr.xdr_value -> t_System'V1'send_message'arg;;
val _of_System'V1'send_message'arg : t_System'V1'send_message'arg -> Xdr.xdr_value;;
val _to_System'V1'send_message'res : Xdr.xdr_value -> t_System'V1'send_message'res;;
val _of_System'V1'send_message'res : t_System'V1'send_message'res -> Xdr.xdr_value;;
val _to_System'V1'log'arg : Xdr.xdr_value -> t_System'V1'log'arg;;
val _of_System'V1'log'arg : t_System'V1'log'arg -> Xdr.xdr_value;;
val _to_System'V1'log'res : Xdr.xdr_value -> t_System'V1'log'res;;
val _of_System'V1'log'res : t_System'V1'log'res -> Xdr.xdr_value;;
val _to_System'V1'call_plugin'arg : Xdr.xdr_value -> t_System'V1'call_plugin'arg;;
val _of_System'V1'call_plugin'arg : t_System'V1'call_plugin'arg -> Xdr.xdr_value;;
val _to_System'V1'call_plugin'res : Xdr.xdr_value -> t_System'V1'call_plugin'res;;
val _of_System'V1'call_plugin'res : t_System'V1'call_plugin'res -> Xdr.xdr_value;;
val _to_System'V1'register_container_socket'arg : Xdr.xdr_value -> t_System'V1'register_container_socket'arg;;
val _of_System'V1'register_container_socket'arg : t_System'V1'register_container_socket'arg -> Xdr.xdr_value;;
val _to_System'V1'register_container_socket'res : Xdr.xdr_value -> t_System'V1'register_container_socket'res;;
val _of_System'V1'register_container_socket'res : t_System'V1'register_container_socket'res -> Xdr.xdr_value;;
val _to_System'V1'lookup_container_sockets'arg : Xdr.xdr_value -> t_System'V1'lookup_container_sockets'arg;;
val _of_System'V1'lookup_container_sockets'arg : t_System'V1'lookup_container_sockets'arg -> Xdr.xdr_value;;
val _to_System'V1'lookup_container_sockets'res : Xdr.xdr_value -> t_System'V1'lookup_container_sockets'res;;
val _of_System'V1'lookup_container_sockets'res : t_System'V1'lookup_container_sockets'res -> Xdr.xdr_value;;
val _to_System'V1'activate_lever'arg : Xdr.xdr_value -> t_System'V1'activate_lever'arg;;
val _of_System'V1'activate_lever'arg : t_System'V1'activate_lever'arg -> Xdr.xdr_value;;
val _to_System'V1'activate_lever'res : Xdr.xdr_value -> t_System'V1'activate_lever'res;;
val _of_System'V1'activate_lever'res : t_System'V1'activate_lever'res -> Xdr.xdr_value;;
val _to_result_code : Xdr.xdr_value -> result_code;;
val _of_result_code : result_code -> Xdr.xdr_value;;
val _to_unit_result : Xdr.xdr_value -> unit_result;;
val _of_unit_result : unit_result -> Xdr.xdr_value;;
val _to_socket_domain : Xdr.xdr_value -> socket_domain;;
val _of_socket_domain : socket_domain -> Xdr.xdr_value;;
val _to_port : Xdr.xdr_value -> port;;
val _of_port : port -> Xdr.xdr_value;;
val _to_port_list : Xdr.xdr_value -> port_list;;
val _of_port_list : port_list -> Xdr.xdr_value;;
val _to_prot : Xdr.xdr_value -> prot;;
val _of_prot : prot -> Xdr.xdr_value;;
val _to_prot_list : Xdr.xdr_value -> prot_list;;
val _of_prot_list : prot_list -> Xdr.xdr_value;;
val _to_srv_state : Xdr.xdr_value -> srv_state;;
val _of_srv_state : srv_state -> Xdr.xdr_value;;
val _to_cnt_state_enum : Xdr.xdr_value -> cnt_state_enum;;
val _of_cnt_state_enum : cnt_state_enum -> Xdr.xdr_value;;
val _to_cnt_state : Xdr.xdr_value -> cnt_state;;
val _of_cnt_state : cnt_state -> Xdr.xdr_value;;
val _to_container_info : Xdr.xdr_value -> container_info;;
val _of_container_info : container_info -> Xdr.xdr_value;;
val _to_service_info : Xdr.xdr_value -> service_info;;
val _of_service_info : service_info -> Xdr.xdr_value;;
val _to_service_info_list : Xdr.xdr_value -> service_info_list;;
val _of_service_info_list : service_info_list -> Xdr.xdr_value;;
val _to_Admin'V2'ping'arg : Xdr.xdr_value -> t_Admin'V2'ping'arg;;
val _of_Admin'V2'ping'arg : t_Admin'V2'ping'arg -> Xdr.xdr_value;;
val _to_Admin'V2'ping'res : Xdr.xdr_value -> t_Admin'V2'ping'res;;
val _of_Admin'V2'ping'res : t_Admin'V2'ping'res -> Xdr.xdr_value;;
val _to_Admin'V2'list'arg : Xdr.xdr_value -> t_Admin'V2'list'arg;;
val _of_Admin'V2'list'arg : t_Admin'V2'list'arg -> Xdr.xdr_value;;
val _to_Admin'V2'list'res : Xdr.xdr_value -> t_Admin'V2'list'res;;
val _of_Admin'V2'list'res : t_Admin'V2'list'res -> Xdr.xdr_value;;
val _to_Admin'V2'enable'arg : Xdr.xdr_value -> t_Admin'V2'enable'arg;;
val _of_Admin'V2'enable'arg : t_Admin'V2'enable'arg -> Xdr.xdr_value;;
val _to_Admin'V2'enable'res : Xdr.xdr_value -> t_Admin'V2'enable'res;;
val _of_Admin'V2'enable'res : t_Admin'V2'enable'res -> Xdr.xdr_value;;
val _to_Admin'V2'disable'arg : Xdr.xdr_value -> t_Admin'V2'disable'arg;;
val _of_Admin'V2'disable'arg : t_Admin'V2'disable'arg -> Xdr.xdr_value;;
val _to_Admin'V2'disable'res : Xdr.xdr_value -> t_Admin'V2'disable'res;;
val _of_Admin'V2'disable'res : t_Admin'V2'disable'res -> Xdr.xdr_value;;
val _to_Admin'V2'restart'arg : Xdr.xdr_value -> t_Admin'V2'restart'arg;;
val _of_Admin'V2'restart'arg : t_Admin'V2'restart'arg -> Xdr.xdr_value;;
val _to_Admin'V2'restart'res : Xdr.xdr_value -> t_Admin'V2'restart'res;;
val _of_Admin'V2'restart'res : t_Admin'V2'restart'res -> Xdr.xdr_value;;
val _to_Admin'V2'restart_all'arg : Xdr.xdr_value -> t_Admin'V2'restart_all'arg;;
val _of_Admin'V2'restart_all'arg : t_Admin'V2'restart_all'arg -> Xdr.xdr_value;;
val _to_Admin'V2'restart_all'res : Xdr.xdr_value -> t_Admin'V2'restart_all'res;;
val _of_Admin'V2'restart_all'res : t_Admin'V2'restart_all'res -> Xdr.xdr_value;;
val _to_Admin'V2'system_shutdown'arg : Xdr.xdr_value -> t_Admin'V2'system_shutdown'arg;;
val _of_Admin'V2'system_shutdown'arg : t_Admin'V2'system_shutdown'arg -> Xdr.xdr_value;;
val _to_Admin'V2'system_shutdown'res : Xdr.xdr_value -> t_Admin'V2'system_shutdown'res;;
val _of_Admin'V2'system_shutdown'res : t_Admin'V2'system_shutdown'res -> Xdr.xdr_value;;
val _to_Admin'V2'reopen_logfiles'arg : Xdr.xdr_value -> t_Admin'V2'reopen_logfiles'arg;;
val _of_Admin'V2'reopen_logfiles'arg : t_Admin'V2'reopen_logfiles'arg -> Xdr.xdr_value;;
val _to_Admin'V2'reopen_logfiles'res : Xdr.xdr_value -> t_Admin'V2'reopen_logfiles'res;;
val _of_Admin'V2'reopen_logfiles'res : t_Admin'V2'reopen_logfiles'res -> Xdr.xdr_value;;
val _to_Admin'V2'send_admin_message'arg : Xdr.xdr_value -> t_Admin'V2'send_admin_message'arg;;
val _of_Admin'V2'send_admin_message'arg : t_Admin'V2'send_admin_message'arg -> Xdr.xdr_value;;
val _to_Admin'V2'send_admin_message'res : Xdr.xdr_value -> t_Admin'V2'send_admin_message'res;;
val _of_Admin'V2'send_admin_message'res : t_Admin'V2'send_admin_message'res -> Xdr.xdr_value;;
val _to_Semaphore'V1'ping'arg : Xdr.xdr_value -> t_Semaphore'V1'ping'arg;;
val _of_Semaphore'V1'ping'arg : t_Semaphore'V1'ping'arg -> Xdr.xdr_value;;
val _to_Semaphore'V1'ping'res : Xdr.xdr_value -> t_Semaphore'V1'ping'res;;
val _of_Semaphore'V1'ping'res : t_Semaphore'V1'ping'res -> Xdr.xdr_value;;
val _to_Semaphore'V1'increment'arg : Xdr.xdr_value -> t_Semaphore'V1'increment'arg;;
val _of_Semaphore'V1'increment'arg : t_Semaphore'V1'increment'arg -> Xdr.xdr_value;;
val _to_Semaphore'V1'increment'res : Xdr.xdr_value -> t_Semaphore'V1'increment'res;;
val _of_Semaphore'V1'increment'res : t_Semaphore'V1'increment'res -> Xdr.xdr_value;;
val _to_Semaphore'V1'decrement'arg : Xdr.xdr_value -> t_Semaphore'V1'decrement'arg;;
val _of_Semaphore'V1'decrement'arg : t_Semaphore'V1'decrement'arg -> Xdr.xdr_value;;
val _to_Semaphore'V1'decrement'res : Xdr.xdr_value -> t_Semaphore'V1'decrement'res;;
val _of_Semaphore'V1'decrement'res : t_Semaphore'V1'decrement'res -> Xdr.xdr_value;;
val _to_Semaphore'V1'get'arg : Xdr.xdr_value -> t_Semaphore'V1'get'arg;;
val _of_Semaphore'V1'get'arg : t_Semaphore'V1'get'arg -> Xdr.xdr_value;;
val _to_Semaphore'V1'get'res : Xdr.xdr_value -> t_Semaphore'V1'get'res;;
val _of_Semaphore'V1'get'res : t_Semaphore'V1'get'res -> Xdr.xdr_value;;
val _to_Semaphore'V1'create'arg : Xdr.xdr_value -> t_Semaphore'V1'create'arg;;
val _of_Semaphore'V1'create'arg : t_Semaphore'V1'create'arg -> Xdr.xdr_value;;
val _to_Semaphore'V1'create'res : Xdr.xdr_value -> t_Semaphore'V1'create'res;;
val _of_Semaphore'V1'create'res : t_Semaphore'V1'create'res -> Xdr.xdr_value;;
val _to_Semaphore'V1'destroy'arg : Xdr.xdr_value -> t_Semaphore'V1'destroy'arg;;
val _of_Semaphore'V1'destroy'arg : t_Semaphore'V1'destroy'arg -> Xdr.xdr_value;;
val _to_Semaphore'V1'destroy'res : Xdr.xdr_value -> t_Semaphore'V1'destroy'res;;
val _of_Semaphore'V1'destroy'res : t_Semaphore'V1'destroy'res -> Xdr.xdr_value;;
val _to_shvar_enum : Xdr.xdr_value -> shvar_enum;;
val _of_shvar_enum : shvar_enum -> Xdr.xdr_value;;
val _to_shvar_code : Xdr.xdr_value -> shvar_code;;
val _of_shvar_code : shvar_code -> Xdr.xdr_value;;
val _to_shvar_get : Xdr.xdr_value -> shvar_get;;
val _of_shvar_get : shvar_get -> Xdr.xdr_value;;
val _to_Sharedvar'V1'ping'arg : Xdr.xdr_value -> t_Sharedvar'V1'ping'arg;;
val _of_Sharedvar'V1'ping'arg : t_Sharedvar'V1'ping'arg -> Xdr.xdr_value;;
val _to_Sharedvar'V1'ping'res : Xdr.xdr_value -> t_Sharedvar'V1'ping'res;;
val _of_Sharedvar'V1'ping'res : t_Sharedvar'V1'ping'res -> Xdr.xdr_value;;
val _to_Sharedvar'V1'create_var'arg : Xdr.xdr_value -> t_Sharedvar'V1'create_var'arg;;
val _of_Sharedvar'V1'create_var'arg : t_Sharedvar'V1'create_var'arg -> Xdr.xdr_value;;
val _to_Sharedvar'V1'create_var'res : Xdr.xdr_value -> t_Sharedvar'V1'create_var'res;;
val _of_Sharedvar'V1'create_var'res : t_Sharedvar'V1'create_var'res -> Xdr.xdr_value;;
val _to_Sharedvar'V1'set_value'arg : Xdr.xdr_value -> t_Sharedvar'V1'set_value'arg;;
val _of_Sharedvar'V1'set_value'arg : t_Sharedvar'V1'set_value'arg -> Xdr.xdr_value;;
val _to_Sharedvar'V1'set_value'res : Xdr.xdr_value -> t_Sharedvar'V1'set_value'res;;
val _of_Sharedvar'V1'set_value'res : t_Sharedvar'V1'set_value'res -> Xdr.xdr_value;;
val _to_Sharedvar'V1'get_value'arg : Xdr.xdr_value -> t_Sharedvar'V1'get_value'arg;;
val _of_Sharedvar'V1'get_value'arg : t_Sharedvar'V1'get_value'arg -> Xdr.xdr_value;;
val _to_Sharedvar'V1'get_value'res : Xdr.xdr_value -> t_Sharedvar'V1'get_value'res;;
val _of_Sharedvar'V1'get_value'res : t_Sharedvar'V1'get_value'res -> Xdr.xdr_value;;
val _to_Sharedvar'V1'delete_var'arg : Xdr.xdr_value -> t_Sharedvar'V1'delete_var'arg;;
val _of_Sharedvar'V1'delete_var'arg : t_Sharedvar'V1'delete_var'arg -> Xdr.xdr_value;;
val _to_Sharedvar'V1'delete_var'res : Xdr.xdr_value -> t_Sharedvar'V1'delete_var'res;;
val _of_Sharedvar'V1'delete_var'res : t_Sharedvar'V1'delete_var'res -> Xdr.xdr_value;;
val _to_Sharedvar'V1'wait_for_value'arg : Xdr.xdr_value -> t_Sharedvar'V1'wait_for_value'arg;;
val _of_Sharedvar'V1'wait_for_value'arg : t_Sharedvar'V1'wait_for_value'arg -> Xdr.xdr_value;;
val _to_Sharedvar'V1'wait_for_value'res : Xdr.xdr_value -> t_Sharedvar'V1'wait_for_value'res;;
val _of_Sharedvar'V1'wait_for_value'res : t_Sharedvar'V1'wait_for_value'res -> Xdr.xdr_value;;
val _to_Sharedvar'V1'dump'arg : Xdr.xdr_value -> t_Sharedvar'V1'dump'arg;;
val _of_Sharedvar'V1'dump'arg : t_Sharedvar'V1'dump'arg -> Xdr.xdr_value;;
val _to_Sharedvar'V1'dump'res : Xdr.xdr_value -> t_Sharedvar'V1'dump'res;;
val _of_Sharedvar'V1'dump'res : t_Sharedvar'V1'dump'res -> Xdr.xdr_value;;

(* XDR definitions *)

val xdrt_longstring : Xdr.xdr_type_term;;
val xdrt_longstring_opt : Xdr.xdr_type_term;;
val xdrt_internal_port : Xdr.xdr_type_term;;
val xdrt_internal_ports : Xdr.xdr_type_term;;
val xdrt_message : Xdr.xdr_type_term;;
val xdrt_socket_id : Xdr.xdr_type_term;;
val xdrt_socket_id_list : Xdr.xdr_type_term;;
val xdrt_event_type : Xdr.xdr_type_term;;
val xdrt_event : Xdr.xdr_type_term;;
val xdrt_level : Xdr.xdr_type_term;;
val xdrt_Control'V1'ping'arg : Xdr.xdr_type_term;;
val xdrt_Control'V1'ping'res : Xdr.xdr_type_term;;
val xdrt_Control'V1'poll'arg : Xdr.xdr_type_term;;
val xdrt_Control'V1'poll'res : Xdr.xdr_type_term;;
val xdrt_Control'V1'accepted'arg : Xdr.xdr_type_term;;
val xdrt_Control'V1'accepted'res : Xdr.xdr_type_term;;
val xdrt_System'V1'ping'arg : Xdr.xdr_type_term;;
val xdrt_System'V1'ping'res : Xdr.xdr_type_term;;
val xdrt_System'V1'lookup'arg : Xdr.xdr_type_term;;
val xdrt_System'V1'lookup'res : Xdr.xdr_type_term;;
val xdrt_System'V1'send_message'arg : Xdr.xdr_type_term;;
val xdrt_System'V1'send_message'res : Xdr.xdr_type_term;;
val xdrt_System'V1'log'arg : Xdr.xdr_type_term;;
val xdrt_System'V1'log'res : Xdr.xdr_type_term;;
val xdrt_System'V1'call_plugin'arg : Xdr.xdr_type_term;;
val xdrt_System'V1'call_plugin'res : Xdr.xdr_type_term;;
val xdrt_System'V1'register_container_socket'arg : Xdr.xdr_type_term;;
val xdrt_System'V1'register_container_socket'res : Xdr.xdr_type_term;;
val xdrt_System'V1'lookup_container_sockets'arg : Xdr.xdr_type_term;;
val xdrt_System'V1'lookup_container_sockets'res : Xdr.xdr_type_term;;
val xdrt_System'V1'activate_lever'arg : Xdr.xdr_type_term;;
val xdrt_System'V1'activate_lever'res : Xdr.xdr_type_term;;
val xdrt_result_code : Xdr.xdr_type_term;;
val xdrt_unit_result : Xdr.xdr_type_term;;
val xdrt_socket_domain : Xdr.xdr_type_term;;
val xdrt_port : Xdr.xdr_type_term;;
val xdrt_port_list : Xdr.xdr_type_term;;
val xdrt_prot : Xdr.xdr_type_term;;
val xdrt_prot_list : Xdr.xdr_type_term;;
val xdrt_srv_state : Xdr.xdr_type_term;;
val xdrt_cnt_state_enum : Xdr.xdr_type_term;;
val xdrt_cnt_state : Xdr.xdr_type_term;;
val xdrt_container_info : Xdr.xdr_type_term;;
val xdrt_service_info : Xdr.xdr_type_term;;
val xdrt_service_info_list : Xdr.xdr_type_term;;
val xdrt_Admin'V2'ping'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V2'ping'res : Xdr.xdr_type_term;;
val xdrt_Admin'V2'list'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V2'list'res : Xdr.xdr_type_term;;
val xdrt_Admin'V2'enable'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V2'enable'res : Xdr.xdr_type_term;;
val xdrt_Admin'V2'disable'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V2'disable'res : Xdr.xdr_type_term;;
val xdrt_Admin'V2'restart'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V2'restart'res : Xdr.xdr_type_term;;
val xdrt_Admin'V2'restart_all'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V2'restart_all'res : Xdr.xdr_type_term;;
val xdrt_Admin'V2'system_shutdown'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V2'system_shutdown'res : Xdr.xdr_type_term;;
val xdrt_Admin'V2'reopen_logfiles'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V2'reopen_logfiles'res : Xdr.xdr_type_term;;
val xdrt_Admin'V2'send_admin_message'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V2'send_admin_message'res : Xdr.xdr_type_term;;
val xdrt_Semaphore'V1'ping'arg : Xdr.xdr_type_term;;
val xdrt_Semaphore'V1'ping'res : Xdr.xdr_type_term;;
val xdrt_Semaphore'V1'increment'arg : Xdr.xdr_type_term;;
val xdrt_Semaphore'V1'increment'res : Xdr.xdr_type_term;;
val xdrt_Semaphore'V1'decrement'arg : Xdr.xdr_type_term;;
val xdrt_Semaphore'V1'decrement'res : Xdr.xdr_type_term;;
val xdrt_Semaphore'V1'get'arg : Xdr.xdr_type_term;;
val xdrt_Semaphore'V1'get'res : Xdr.xdr_type_term;;
val xdrt_Semaphore'V1'create'arg : Xdr.xdr_type_term;;
val xdrt_Semaphore'V1'create'res : Xdr.xdr_type_term;;
val xdrt_Semaphore'V1'destroy'arg : Xdr.xdr_type_term;;
val xdrt_Semaphore'V1'destroy'res : Xdr.xdr_type_term;;
val xdrt_shvar_enum : Xdr.xdr_type_term;;
val xdrt_shvar_code : Xdr.xdr_type_term;;
val xdrt_shvar_get : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'ping'arg : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'ping'res : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'create_var'arg : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'create_var'res : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'set_value'arg : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'set_value'res : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'get_value'arg : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'get_value'res : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'delete_var'arg : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'delete_var'res : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'wait_for_value'arg : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'wait_for_value'res : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'dump'arg : Xdr.xdr_type_term;;
val xdrt_Sharedvar'V1'dump'res : Xdr.xdr_type_term;;

(* Program definitions *)

val program_Control'V1 : Rpc_program.t;;
val program_System'V1 : Rpc_program.t;;
val program_Admin'V2 : Rpc_program.t;;
val program_Semaphore'V1 : Rpc_program.t;;
val program_Sharedvar'V1 : Rpc_program.t;;

