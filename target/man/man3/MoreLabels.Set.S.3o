.TH "MoreLabels.Set.S" 3 2011-12-01 OCamldoc "OCaml library"
.SH NAME
MoreLabels.Set.S \- no description
.SH Module type
Module type   MoreLabels.Set.S
.SH Documentation
.sp
Module type
.BI "S"
 = 
.B sig  end

.sp

.sp

.sp
.sp
.I type elt 

.sp

.sp
.I type t 

.sp

.sp

.I val empty 
: 
.B t
.sp

.sp

.I val is_empty 
: 
.B t -> bool
.sp

.sp

.I val mem 
: 
.B elt -> t -> bool
.sp

.sp

.I val add 
: 
.B elt -> t -> t
.sp

.sp

.I val singleton 
: 
.B elt -> t
.sp

.sp

.I val remove 
: 
.B elt -> t -> t
.sp

.sp

.I val union 
: 
.B t -> t -> t
.sp

.sp

.I val inter 
: 
.B t -> t -> t
.sp

.sp

.I val diff 
: 
.B t -> t -> t
.sp

.sp

.I val compare 
: 
.B t -> t -> int
.sp

.sp

.I val equal 
: 
.B t -> t -> bool
.sp

.sp

.I val subset 
: 
.B t -> t -> bool
.sp

.sp

.I val iter 
: 
.B f:(elt -> unit) -> t -> unit
.sp

.sp

.I val fold 
: 
.B f:(elt -> 'a -> 'a) -> t -> init:'a -> 'a
.sp

.sp

.I val for_all 
: 
.B f:(elt -> bool) -> t -> bool
.sp

.sp

.I val exists 
: 
.B f:(elt -> bool) -> t -> bool
.sp

.sp

.I val filter 
: 
.B f:(elt -> bool) -> t -> t
.sp

.sp

.I val partition 
: 
.B f:(elt -> bool) ->
.B   t -> t * t
.sp

.sp

.I val cardinal 
: 
.B t -> int
.sp

.sp

.I val elements 
: 
.B t -> elt list
.sp

.sp

.I val min_elt 
: 
.B t -> elt
.sp

.sp

.I val max_elt 
: 
.B t -> elt
.sp

.sp

.I val choose 
: 
.B t -> elt
.sp

.sp

.I val split 
: 
.B elt ->
.B   t -> t * bool * t
.sp

.sp
