(************************************************************
 * WARNING!
 *
 * This file is generated by ocamlrpcgen from the source file
 * netplex_ctrl.x
 *
 ************************************************************)
module Control : sig
  module V1 : sig
    open Netplex_ctrl_aux
    val bind :
            ?program_number:Rtypes.uint4 ->
            ?version_number:Rtypes.uint4 ->
            proc_ping : (t_Control'V1'ping'arg -> t_Control'V1'ping'res) ->
            proc_poll : (t_Control'V1'poll'arg -> t_Control'V1'poll'res) ->
            proc_accepted : (t_Control'V1'accepted'arg ->
                             t_Control'V1'accepted'res) ->
            Rpc_server.t ->
            unit
    val bind_async :
            ?program_number:Rtypes.uint4 ->
            ?version_number:Rtypes.uint4 ->
            proc_ping : (Rpc_server.session ->
                         t_Control'V1'ping'arg ->
                         (t_Control'V1'ping'res -> unit) ->
                         unit) ->
            proc_poll : (Rpc_server.session ->
                         t_Control'V1'poll'arg ->
                         (t_Control'V1'poll'res -> unit) ->
                         unit) ->
            proc_accepted : (Rpc_server.session ->
                             t_Control'V1'accepted'arg ->
                             (t_Control'V1'accepted'res -> unit) ->
                             unit) ->
            Rpc_server.t ->
            unit
    end
  
end

module System : sig
  module V1 : sig
    open Netplex_ctrl_aux
    val bind :
            ?program_number:Rtypes.uint4 ->
            ?version_number:Rtypes.uint4 ->
            proc_ping : (t_System'V1'ping'arg -> t_System'V1'ping'res) ->
            proc_lookup : (t_System'V1'lookup'arg -> t_System'V1'lookup'res) ->
            proc_send_message : (t_System'V1'send_message'arg ->
                                 t_System'V1'send_message'res) ->
            proc_log : (t_System'V1'log'arg -> t_System'V1'log'res) ->
            proc_call_plugin : (t_System'V1'call_plugin'arg ->
                                t_System'V1'call_plugin'res) ->
            proc_register_container_socket : (t_System'V1'register_container_socket'arg ->
                                              t_System'V1'register_container_socket'res) ->
            proc_lookup_container_sockets : (t_System'V1'lookup_container_sockets'arg ->
                                             t_System'V1'lookup_container_sockets'res) ->
            proc_activate_lever : (t_System'V1'activate_lever'arg ->
                                   t_System'V1'activate_lever'res) ->
            Rpc_server.t ->
            unit
    val bind_async :
            ?program_number:Rtypes.uint4 ->
            ?version_number:Rtypes.uint4 ->
            proc_ping : (Rpc_server.session ->
                         t_System'V1'ping'arg ->
                         (t_System'V1'ping'res -> unit) ->
                         unit) ->
            proc_lookup : (Rpc_server.session ->
                           t_System'V1'lookup'arg ->
                           (t_System'V1'lookup'res -> unit) ->
                           unit) ->
            proc_send_message : (Rpc_server.session ->
                                 t_System'V1'send_message'arg ->
                                 (t_System'V1'send_message'res -> unit) ->
                                 unit) ->
            proc_log : (Rpc_server.session ->
                        t_System'V1'log'arg ->
                        (t_System'V1'log'res -> unit) ->
                        unit) ->
            proc_call_plugin : (Rpc_server.session ->
                                t_System'V1'call_plugin'arg ->
                                (t_System'V1'call_plugin'res -> unit) ->
                                unit) ->
            proc_register_container_socket : (Rpc_server.session ->
                                              t_System'V1'register_container_socket'arg ->
                                              (t_System'V1'register_container_socket'res -> unit) ->
                                              unit) ->
            proc_lookup_container_sockets : (Rpc_server.session ->
                                             t_System'V1'lookup_container_sockets'arg ->
                                             (t_System'V1'lookup_container_sockets'res -> unit) ->
                                             unit) ->
            proc_activate_lever : (Rpc_server.session ->
                                   t_System'V1'activate_lever'arg ->
                                   (t_System'V1'activate_lever'res -> unit) ->
                                   unit) ->
            Rpc_server.t ->
            unit
    end
  
end

module Admin : sig
  module V2 : sig
    open Netplex_ctrl_aux
    val bind :
            ?program_number:Rtypes.uint4 ->
            ?version_number:Rtypes.uint4 ->
            proc_ping : (t_Admin'V2'ping'arg -> t_Admin'V2'ping'res) ->
            proc_list : (t_Admin'V2'list'arg -> t_Admin'V2'list'res) ->
            proc_enable : (t_Admin'V2'enable'arg -> t_Admin'V2'enable'res) ->
            proc_disable : (t_Admin'V2'disable'arg -> t_Admin'V2'disable'res) ->
            proc_restart : (t_Admin'V2'restart'arg -> t_Admin'V2'restart'res) ->
            proc_restart_all : (t_Admin'V2'restart_all'arg ->
                                t_Admin'V2'restart_all'res) ->
            proc_system_shutdown : (t_Admin'V2'system_shutdown'arg ->
                                    t_Admin'V2'system_shutdown'res) ->
            proc_reopen_logfiles : (t_Admin'V2'reopen_logfiles'arg ->
                                    t_Admin'V2'reopen_logfiles'res) ->
            proc_send_admin_message : (t_Admin'V2'send_admin_message'arg ->
                                       t_Admin'V2'send_admin_message'res) ->
            Rpc_server.t ->
            unit
    val bind_async :
            ?program_number:Rtypes.uint4 ->
            ?version_number:Rtypes.uint4 ->
            proc_ping : (Rpc_server.session ->
                         t_Admin'V2'ping'arg ->
                         (t_Admin'V2'ping'res -> unit) ->
                         unit) ->
            proc_list : (Rpc_server.session ->
                         t_Admin'V2'list'arg ->
                         (t_Admin'V2'list'res -> unit) ->
                         unit) ->
            proc_enable : (Rpc_server.session ->
                           t_Admin'V2'enable'arg ->
                           (t_Admin'V2'enable'res -> unit) ->
                           unit) ->
            proc_disable : (Rpc_server.session ->
                            t_Admin'V2'disable'arg ->
                            (t_Admin'V2'disable'res -> unit) ->
                            unit) ->
            proc_restart : (Rpc_server.session ->
                            t_Admin'V2'restart'arg ->
                            (t_Admin'V2'restart'res -> unit) ->
                            unit) ->
            proc_restart_all : (Rpc_server.session ->
                                t_Admin'V2'restart_all'arg ->
                                (t_Admin'V2'restart_all'res -> unit) ->
                                unit) ->
            proc_system_shutdown : (Rpc_server.session ->
                                    t_Admin'V2'system_shutdown'arg ->
                                    (t_Admin'V2'system_shutdown'res -> unit) ->
                                    unit) ->
            proc_reopen_logfiles : (Rpc_server.session ->
                                    t_Admin'V2'reopen_logfiles'arg ->
                                    (t_Admin'V2'reopen_logfiles'res -> unit) ->
                                    unit) ->
            proc_send_admin_message : (Rpc_server.session ->
                                       t_Admin'V2'send_admin_message'arg ->
                                       (t_Admin'V2'send_admin_message'res -> unit) ->
                                       unit) ->
            Rpc_server.t ->
            unit
    end
  
end

module Semaphore : sig
  module V1 : sig
    open Netplex_ctrl_aux
    val bind :
            ?program_number:Rtypes.uint4 ->
            ?version_number:Rtypes.uint4 ->
            proc_ping : (t_Semaphore'V1'ping'arg -> t_Semaphore'V1'ping'res) ->
            proc_increment : (t_Semaphore'V1'increment'arg ->
                              t_Semaphore'V1'increment'res) ->
            proc_decrement : (t_Semaphore'V1'decrement'arg ->
                              t_Semaphore'V1'decrement'res) ->
            proc_get : (t_Semaphore'V1'get'arg -> t_Semaphore'V1'get'res) ->
            proc_create : (t_Semaphore'V1'create'arg ->
                           t_Semaphore'V1'create'res) ->
            proc_destroy : (t_Semaphore'V1'destroy'arg ->
                            t_Semaphore'V1'destroy'res) ->
            Rpc_server.t ->
            unit
    val bind_async :
            ?program_number:Rtypes.uint4 ->
            ?version_number:Rtypes.uint4 ->
            proc_ping : (Rpc_server.session ->
                         t_Semaphore'V1'ping'arg ->
                         (t_Semaphore'V1'ping'res -> unit) ->
                         unit) ->
            proc_increment : (Rpc_server.session ->
                              t_Semaphore'V1'increment'arg ->
                              (t_Semaphore'V1'increment'res -> unit) ->
                              unit) ->
            proc_decrement : (Rpc_server.session ->
                              t_Semaphore'V1'decrement'arg ->
                              (t_Semaphore'V1'decrement'res -> unit) ->
                              unit) ->
            proc_get : (Rpc_server.session ->
                        t_Semaphore'V1'get'arg ->
                        (t_Semaphore'V1'get'res -> unit) ->
                        unit) ->
            proc_create : (Rpc_server.session ->
                           t_Semaphore'V1'create'arg ->
                           (t_Semaphore'V1'create'res -> unit) ->
                           unit) ->
            proc_destroy : (Rpc_server.session ->
                            t_Semaphore'V1'destroy'arg ->
                            (t_Semaphore'V1'destroy'res -> unit) ->
                            unit) ->
            Rpc_server.t ->
            unit
    end
  
end

module Sharedvar : sig
  module V1 : sig
    open Netplex_ctrl_aux
    val bind :
            ?program_number:Rtypes.uint4 ->
            ?version_number:Rtypes.uint4 ->
            proc_ping : (t_Sharedvar'V1'ping'arg -> t_Sharedvar'V1'ping'res) ->
            proc_create_var : (t_Sharedvar'V1'create_var'arg ->
                               t_Sharedvar'V1'create_var'res) ->
            proc_set_value : (t_Sharedvar'V1'set_value'arg ->
                              t_Sharedvar'V1'set_value'res) ->
            proc_get_value : (t_Sharedvar'V1'get_value'arg ->
                              t_Sharedvar'V1'get_value'res) ->
            proc_delete_var : (t_Sharedvar'V1'delete_var'arg ->
                               t_Sharedvar'V1'delete_var'res) ->
            proc_wait_for_value : (t_Sharedvar'V1'wait_for_value'arg ->
                                   t_Sharedvar'V1'wait_for_value'res) ->
            proc_dump : (t_Sharedvar'V1'dump'arg -> t_Sharedvar'V1'dump'res) ->
            Rpc_server.t ->
            unit
    val bind_async :
            ?program_number:Rtypes.uint4 ->
            ?version_number:Rtypes.uint4 ->
            proc_ping : (Rpc_server.session ->
                         t_Sharedvar'V1'ping'arg ->
                         (t_Sharedvar'V1'ping'res -> unit) ->
                         unit) ->
            proc_create_var : (Rpc_server.session ->
                               t_Sharedvar'V1'create_var'arg ->
                               (t_Sharedvar'V1'create_var'res -> unit) ->
                               unit) ->
            proc_set_value : (Rpc_server.session ->
                              t_Sharedvar'V1'set_value'arg ->
                              (t_Sharedvar'V1'set_value'res -> unit) ->
                              unit) ->
            proc_get_value : (Rpc_server.session ->
                              t_Sharedvar'V1'get_value'arg ->
                              (t_Sharedvar'V1'get_value'res -> unit) ->
                              unit) ->
            proc_delete_var : (Rpc_server.session ->
                               t_Sharedvar'V1'delete_var'arg ->
                               (t_Sharedvar'V1'delete_var'res -> unit) ->
                               unit) ->
            proc_wait_for_value : (Rpc_server.session ->
                                   t_Sharedvar'V1'wait_for_value'arg ->
                                   (t_Sharedvar'V1'wait_for_value'res -> unit) ->
                                   unit) ->
            proc_dump : (Rpc_server.session ->
                         t_Sharedvar'V1'dump'arg ->
                         (t_Sharedvar'V1'dump'res -> unit) ->
                         unit) ->
            Rpc_server.t ->
            unit
    end
  
end


