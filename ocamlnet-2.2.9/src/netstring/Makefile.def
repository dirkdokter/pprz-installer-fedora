OBJECTS  = netconst.cmo netstring_pcre.cmo netstring_str.cmo netbuffer.cmo \
	   netaux.cmo netchannels.cmo netdate.cmo \
	   netdb.cmo netmappings.cmo netconversion.cmo netulex.cmo \
           netencoding.cmo netstream.cmo \
	   mimestring.cmo \
           nethtml_scanner.cmo nethtml.cmo \
	   neturl.cmo \
	   netaddress.cmo \
	   netmime.cmo netsendmail.cmo nethttp.cmo \

PKGNAME  = netstring

REQUIRES = pcre
INCLUDES += $(INC_NETSYS)

ISO_MAPPINGS   = mappings/iso*.unimap
JP_MAPPINGS    = mappings/jis*.*map
KR_MAPPINGS    = mappings/ks*.*map
OTHER_MAPPINGS = mappings/cp*.unimap \
                 mappings/adobe*.unimap \
                 mappings/koi*.unimap \
                 mappings/mac*.unimap \
                 mappings/windows*.unimap

PMAP = netmappings_iso.pmap netmappings_other.pmap netmappings_jp.pmap netmappings_kr.pmap

# netconversion.cmx: Allow cross-library inlining for this module

INSTALL_EXTRA = netstring_mt.cmo      netstring_mt.cmx      netstring_mt.o     \
	        netmappings_iso.cmo   netmappings_iso.cmx   netmappings_iso.o  \
	        netmappings_jp.cmo   netmappings_jp.cmx   netmappings_jp.o  \
	        netmappings_kr.cmo   netmappings_kr.cmx   netmappings_kr.o  \
	        netmappings_other.cmo netmappings_other.cmx netmappings_other.o\
		netmappings_min.cmo  netmappings_min.cmx netmappings_min.o \
		netconversion.cmx \
		netstring_top.cmo \
		netdb-packlist \
		dllnetaccel_c.* netaccel_link.cmo

DOBJECTS = netconversion.mli netchannels.mli netstream.mli mimestring.mli \
	netmime.mli netsendmail.mli neturl.mli netaddress.mli netbuffer.mli \
	netdate.mli netencoding.mli netulex.mli netaccel.mli \
	netaccel_link.mli nethtml.mli netstring_str.mli netstring_pcre.mli \
	netstring_mt.mli \
	netmappings.mli netaux.mli nethttp.mli \
	netchannels_tut.txt netmime_tut.txt netsendmail_tut.txt \
	netulex_tut.txt neturl_tut.txt

PP_OPTIONS = -package camlp4 -syntax camlp4o

OCAMLC_OPTIONS_FOR_netstring_mt.ml = $(THREAD)
OCAMLOPT_OPTIONS_FOR_netstring_mt.ml = $(THREAD)

INSTOTHER = install-netdb
PACKLIST = netdb-packlist

BUILD_EXTRA = netaccel.cma  netaccel_link.cmo \
	      $(PMAP:.pmap=.cmo) netmappings_min.cmo

ALL_EXTRA = $(BUILD_EXTRA) netstring_top.cmo
ALLMT_EXTRA = netstring_mt.cmo 
OPT_EXTRA = $(BUILD_EXTRA:.cmo=.cmx)
OPTMT_EXTRA = netstring_mt.cmx

netaccel.cma: netaccel_c.o netaccel.cmo
	$(OCAMLMKLIB) -o netaccel -oc netaccel_c netaccel_c.o netaccel.cmo

netaccel.cmxa: netaccel_c.o netaccel.cmx
	$(OCAMLMKLIB) -o netaccel -oc netaccel_c netaccel_c.o netaccel.cmx

netdb.ml: netdb.mlp netdb.cmi
	sed -e 's|@NET_DB_DIR@|$(NET_DB_DIR)|' netdb.mlp >netdb.ml

netdb_done: tools_done $(PMAP)
	mkdir -p netdb
	cd netdb && \
		../tools/unimap_to_ocaml/unimap_to_ocaml -netdb ../*.pmap
	touch netdb_done

netmappings_iso.pmap: tools_done
	test ! -d mappings || tools/unimap_to_ocaml/unimap_to_ocaml \
		-o netmappings_iso.pmap -pmap $(ISO_MAPPINGS)

netmappings_iso.ml: netmappings_iso.pmap netdb.cmi
	tools/unimap_to_ocaml/unimap_to_ocaml \
		-o netmappings_iso.ml netmappings_iso.pmap

netmappings_jp.pmap: tools_done
	test ! -d mappings || tools/unimap_to_ocaml/unimap_to_ocaml \
		-o netmappings_jp.pmap -pmap $(JP_MAPPINGS)

#	test ! -f mappings/Unihan.txt.bz2 || \
#	   bzip2 -c -d mappings/Unihan.txt.bz2 | \
# 	   tools/unimap_to_ocaml/unihan_extract \
#	       -o netmappings_jp.pmap -jis0208 -jis0212

netmappings_jp.ml: netmappings_jp.pmap netdb.cmi
	tools/unimap_to_ocaml/unimap_to_ocaml \
		-o netmappings_jp.ml netmappings_jp.pmap

netmappings_kr.pmap: tools_done
	test ! -d mappings || tools/unimap_to_ocaml/unimap_to_ocaml \
		-o netmappings_kr.pmap -pmap $(KR_MAPPINGS)

netmappings_kr.ml: netmappings_kr.pmap netdb.cmi
	tools/unimap_to_ocaml/unimap_to_ocaml \
		-o netmappings_kr.ml netmappings_kr.pmap

netmappings_other.pmap: tools_done
	test ! -d mappings || tools/unimap_to_ocaml/unimap_to_ocaml \
		-o netmappings_other.pmap -pmap $(OTHER_MAPPINGS)

netmappings_other.ml: netmappings_other.pmap netdb.cmi
	tools/unimap_to_ocaml/unimap_to_ocaml \
		-o netmappings_other.ml netmappings_other.pmap

netdb-packlist: netdb_done
	test -d netdb
	(cd netdb && ls *.netdb) | \
	{ while read f; do echo "$(NET_DB_DIR)/$$f"; done; } >netdb-packlist

.PHONY: install-netdb
install-netdb:
	mkdir -p $(DESTDIR)$(NET_DB_DIR)
	cp netdb/*.netdb $(DESTDIR)$(NET_DB_DIR)
	@echo "Installed .netdb files into $(DESTDIR)$(NET_DB_DIR)"

tools_done:
	cd tools && $(MAKE)
	touch tools_done

netdate.ml: netdate.mlp
	$(CAMLP4) pa_o.cmo pa_op.cmo pr_o.cmo -impl netdate.mlp > netdate.ml

netdate.cmo: netdate.cmi
netdate.cmx: netdate.cmi

netconst.ml: netconst.mlp
	sed -e 's/@VERSION@/$(VERSION)/' netconst.mlp >netconst.ml

netconst.cmo: netconst.cmi
netconst.cmx: netconst.cmi

include $(TOP_DIR)/Makefile.rules

CLEAN_LIST += tools_done netdb_done netdb.ml netdate.ml $(PMAP:.pmap=.ml)
CLEAN_LIST += netconst.ml

clean::
	test ! -d mappings || rm -f $(PMAP)
	rm -rf netdb
	cd tools && $(MAKE) clean

distclean::
	$(MAKE) clean
