(************************************************************
 * WARNING!
 *
 * This file is generated by ocamlrpcgen from the source file
 * netplex_ctrl.x
 *
 ************************************************************)

(* Type definitions *)

type longstring = 
      string
and internal_port = 
      longstring option
and message = 
      { 
        mutable msg_name : longstring;
        mutable msg_arguments : longstring array;
      }
and socket_id = 
      { 
        mutable sock_protocol : longstring;
        mutable sock_index : int;
      }
and socket_id_list = 
      socket_id array
and event_type = 
      Rtypes.int4
and event = 
      [ 
      | `event_none 
      | `event_accept 
      | `event_noaccept 
      | `event_received_message of (message) 
      | `event_received_admin_message of (message) 
      | `event_shutdown 
      ]
and level = 
      Rtypes.int4
and t_Control'V1'ping'arg = 
      unit
and t_Control'V1'ping'res = 
      unit
and t_Control'V1'poll'arg = 
      int
and t_Control'V1'poll'res = 
      event
and t_Control'V1'accepted'arg = 
      unit
and t_Control'V1'accepted'res = 
      unit
and t_System'V1'ping'arg = 
      unit
and t_System'V1'ping'res = 
      unit
and t_System'V1'lookup'arg = 
      ( longstring * longstring )
and t_System'V1'lookup'res = 
      internal_port
and t_System'V1'send_message'arg = 
      ( longstring * message )
and t_System'V1'send_message'res = 
      unit
and t_System'V1'log'arg = 
      ( level * longstring )
and t_System'V1'log'res = 
      unit
and result_code = 
      Rtypes.int4
and unit_result = 
      [ | `code_ok | `code_error of (longstring) ]
and socket_domain = 
      Rtypes.int4
and port = 
      [ 
      | `pf_unknown 
      | `pf_unix of (longstring) 
      | `pf_inet of (_t0) 
      | `pf_inet6 of (_t1) 
      ]
and port_list = 
      port array
and prot = 
      { 
        mutable prot_name : longstring;
        mutable prot_ports : port_list;
      }
and prot_list = 
      prot array
and srv_state = 
      Rtypes.int4
and service = 
      { 
        mutable srv_name : longstring;
        mutable srv_protocols : prot_list;
        mutable srv_nr_containers : int;
        mutable srv_state : srv_state;
      }
and service_list = 
      service array
and t_Admin'V1'ping'arg = 
      unit
and t_Admin'V1'ping'res = 
      unit
and t_Admin'V1'list'arg = 
      unit
and t_Admin'V1'list'res = 
      service_list
and t_Admin'V1'enable'arg = 
      longstring
and t_Admin'V1'enable'res = 
      unit_result
and t_Admin'V1'disable'arg = 
      longstring
and t_Admin'V1'disable'res = 
      unit_result
and t_Admin'V1'restart'arg = 
      longstring
and t_Admin'V1'restart'res = 
      unit_result
and t_Admin'V1'restart_all'arg = 
      unit
and t_Admin'V1'restart_all'res = 
      unit_result
and t_Admin'V1'shutdown'arg = 
      unit
and t_Admin'V1'shutdown'res = 
      unit_result
and t_Admin'V1'reopen_logfiles'arg = 
      unit
and t_Admin'V1'reopen_logfiles'res = 
      unit_result
and t_Admin'V1'send_admin_message'arg = 
      ( longstring * message )
and t_Admin'V1'send_admin_message'res = 
      unit
and _t0 = 
      { 
        mutable inet_addr : longstring;
        mutable inet_port : int;
      }
and _t1 = 
      { 
        mutable inet6_addr : longstring;
        mutable inet6_port : int;
      }
;;

(* Constant definitions *)

val event_none : Rtypes.int4;;
val event_accept : Rtypes.int4;;
val event_noaccept : Rtypes.int4;;
val event_received_message : Rtypes.int4;;
val event_received_admin_message : Rtypes.int4;;
val event_shutdown : Rtypes.int4;;
val log_emerg : Rtypes.int4;;
val log_alert : Rtypes.int4;;
val log_crit : Rtypes.int4;;
val log_err : Rtypes.int4;;
val log_warning : Rtypes.int4;;
val log_notice : Rtypes.int4;;
val log_info : Rtypes.int4;;
val log_debug : Rtypes.int4;;
val code_ok : Rtypes.int4;;
val code_error : Rtypes.int4;;
val pf_unknown : Rtypes.int4;;
val pf_unix : Rtypes.int4;;
val pf_inet : Rtypes.int4;;
val pf_inet6 : Rtypes.int4;;
val state_enabled : Rtypes.int4;;
val state_disabled : Rtypes.int4;;
val state_restarting : Rtypes.int4;;
val state_down : Rtypes.int4;;

(* Conversion functions *)

val _to_longstring : Xdr.xdr_value -> longstring;;
val _of_longstring : longstring -> Xdr.xdr_value;;
val _to_internal_port : Xdr.xdr_value -> internal_port;;
val _of_internal_port : internal_port -> Xdr.xdr_value;;
val _to_message : Xdr.xdr_value -> message;;
val _of_message : message -> Xdr.xdr_value;;
val _to_socket_id : Xdr.xdr_value -> socket_id;;
val _of_socket_id : socket_id -> Xdr.xdr_value;;
val _to_socket_id_list : Xdr.xdr_value -> socket_id_list;;
val _of_socket_id_list : socket_id_list -> Xdr.xdr_value;;
val _to_event_type : Xdr.xdr_value -> event_type;;
val _of_event_type : event_type -> Xdr.xdr_value;;
val _to_event : Xdr.xdr_value -> event;;
val _of_event : event -> Xdr.xdr_value;;
val _to_level : Xdr.xdr_value -> level;;
val _of_level : level -> Xdr.xdr_value;;
val _to_Control'V1'ping'arg : Xdr.xdr_value -> t_Control'V1'ping'arg;;
val _of_Control'V1'ping'arg : t_Control'V1'ping'arg -> Xdr.xdr_value;;
val _to_Control'V1'ping'res : Xdr.xdr_value -> t_Control'V1'ping'res;;
val _of_Control'V1'ping'res : t_Control'V1'ping'res -> Xdr.xdr_value;;
val _to_Control'V1'poll'arg : Xdr.xdr_value -> t_Control'V1'poll'arg;;
val _of_Control'V1'poll'arg : t_Control'V1'poll'arg -> Xdr.xdr_value;;
val _to_Control'V1'poll'res : Xdr.xdr_value -> t_Control'V1'poll'res;;
val _of_Control'V1'poll'res : t_Control'V1'poll'res -> Xdr.xdr_value;;
val _to_Control'V1'accepted'arg : Xdr.xdr_value -> t_Control'V1'accepted'arg;;
val _of_Control'V1'accepted'arg : t_Control'V1'accepted'arg -> Xdr.xdr_value;;
val _to_Control'V1'accepted'res : Xdr.xdr_value -> t_Control'V1'accepted'res;;
val _of_Control'V1'accepted'res : t_Control'V1'accepted'res -> Xdr.xdr_value;;
val _to_System'V1'ping'arg : Xdr.xdr_value -> t_System'V1'ping'arg;;
val _of_System'V1'ping'arg : t_System'V1'ping'arg -> Xdr.xdr_value;;
val _to_System'V1'ping'res : Xdr.xdr_value -> t_System'V1'ping'res;;
val _of_System'V1'ping'res : t_System'V1'ping'res -> Xdr.xdr_value;;
val _to_System'V1'lookup'arg : Xdr.xdr_value -> t_System'V1'lookup'arg;;
val _of_System'V1'lookup'arg : t_System'V1'lookup'arg -> Xdr.xdr_value;;
val _to_System'V1'lookup'res : Xdr.xdr_value -> t_System'V1'lookup'res;;
val _of_System'V1'lookup'res : t_System'V1'lookup'res -> Xdr.xdr_value;;
val _to_System'V1'send_message'arg : Xdr.xdr_value -> t_System'V1'send_message'arg;;
val _of_System'V1'send_message'arg : t_System'V1'send_message'arg -> Xdr.xdr_value;;
val _to_System'V1'send_message'res : Xdr.xdr_value -> t_System'V1'send_message'res;;
val _of_System'V1'send_message'res : t_System'V1'send_message'res -> Xdr.xdr_value;;
val _to_System'V1'log'arg : Xdr.xdr_value -> t_System'V1'log'arg;;
val _of_System'V1'log'arg : t_System'V1'log'arg -> Xdr.xdr_value;;
val _to_System'V1'log'res : Xdr.xdr_value -> t_System'V1'log'res;;
val _of_System'V1'log'res : t_System'V1'log'res -> Xdr.xdr_value;;
val _to_result_code : Xdr.xdr_value -> result_code;;
val _of_result_code : result_code -> Xdr.xdr_value;;
val _to_unit_result : Xdr.xdr_value -> unit_result;;
val _of_unit_result : unit_result -> Xdr.xdr_value;;
val _to_socket_domain : Xdr.xdr_value -> socket_domain;;
val _of_socket_domain : socket_domain -> Xdr.xdr_value;;
val _to_port : Xdr.xdr_value -> port;;
val _of_port : port -> Xdr.xdr_value;;
val _to_port_list : Xdr.xdr_value -> port_list;;
val _of_port_list : port_list -> Xdr.xdr_value;;
val _to_prot : Xdr.xdr_value -> prot;;
val _of_prot : prot -> Xdr.xdr_value;;
val _to_prot_list : Xdr.xdr_value -> prot_list;;
val _of_prot_list : prot_list -> Xdr.xdr_value;;
val _to_srv_state : Xdr.xdr_value -> srv_state;;
val _of_srv_state : srv_state -> Xdr.xdr_value;;
val _to_service : Xdr.xdr_value -> service;;
val _of_service : service -> Xdr.xdr_value;;
val _to_service_list : Xdr.xdr_value -> service_list;;
val _of_service_list : service_list -> Xdr.xdr_value;;
val _to_Admin'V1'ping'arg : Xdr.xdr_value -> t_Admin'V1'ping'arg;;
val _of_Admin'V1'ping'arg : t_Admin'V1'ping'arg -> Xdr.xdr_value;;
val _to_Admin'V1'ping'res : Xdr.xdr_value -> t_Admin'V1'ping'res;;
val _of_Admin'V1'ping'res : t_Admin'V1'ping'res -> Xdr.xdr_value;;
val _to_Admin'V1'list'arg : Xdr.xdr_value -> t_Admin'V1'list'arg;;
val _of_Admin'V1'list'arg : t_Admin'V1'list'arg -> Xdr.xdr_value;;
val _to_Admin'V1'list'res : Xdr.xdr_value -> t_Admin'V1'list'res;;
val _of_Admin'V1'list'res : t_Admin'V1'list'res -> Xdr.xdr_value;;
val _to_Admin'V1'enable'arg : Xdr.xdr_value -> t_Admin'V1'enable'arg;;
val _of_Admin'V1'enable'arg : t_Admin'V1'enable'arg -> Xdr.xdr_value;;
val _to_Admin'V1'enable'res : Xdr.xdr_value -> t_Admin'V1'enable'res;;
val _of_Admin'V1'enable'res : t_Admin'V1'enable'res -> Xdr.xdr_value;;
val _to_Admin'V1'disable'arg : Xdr.xdr_value -> t_Admin'V1'disable'arg;;
val _of_Admin'V1'disable'arg : t_Admin'V1'disable'arg -> Xdr.xdr_value;;
val _to_Admin'V1'disable'res : Xdr.xdr_value -> t_Admin'V1'disable'res;;
val _of_Admin'V1'disable'res : t_Admin'V1'disable'res -> Xdr.xdr_value;;
val _to_Admin'V1'restart'arg : Xdr.xdr_value -> t_Admin'V1'restart'arg;;
val _of_Admin'V1'restart'arg : t_Admin'V1'restart'arg -> Xdr.xdr_value;;
val _to_Admin'V1'restart'res : Xdr.xdr_value -> t_Admin'V1'restart'res;;
val _of_Admin'V1'restart'res : t_Admin'V1'restart'res -> Xdr.xdr_value;;
val _to_Admin'V1'restart_all'arg : Xdr.xdr_value -> t_Admin'V1'restart_all'arg;;
val _of_Admin'V1'restart_all'arg : t_Admin'V1'restart_all'arg -> Xdr.xdr_value;;
val _to_Admin'V1'restart_all'res : Xdr.xdr_value -> t_Admin'V1'restart_all'res;;
val _of_Admin'V1'restart_all'res : t_Admin'V1'restart_all'res -> Xdr.xdr_value;;
val _to_Admin'V1'shutdown'arg : Xdr.xdr_value -> t_Admin'V1'shutdown'arg;;
val _of_Admin'V1'shutdown'arg : t_Admin'V1'shutdown'arg -> Xdr.xdr_value;;
val _to_Admin'V1'shutdown'res : Xdr.xdr_value -> t_Admin'V1'shutdown'res;;
val _of_Admin'V1'shutdown'res : t_Admin'V1'shutdown'res -> Xdr.xdr_value;;
val _to_Admin'V1'reopen_logfiles'arg : Xdr.xdr_value -> t_Admin'V1'reopen_logfiles'arg;;
val _of_Admin'V1'reopen_logfiles'arg : t_Admin'V1'reopen_logfiles'arg -> Xdr.xdr_value;;
val _to_Admin'V1'reopen_logfiles'res : Xdr.xdr_value -> t_Admin'V1'reopen_logfiles'res;;
val _of_Admin'V1'reopen_logfiles'res : t_Admin'V1'reopen_logfiles'res -> Xdr.xdr_value;;
val _to_Admin'V1'send_admin_message'arg : Xdr.xdr_value -> t_Admin'V1'send_admin_message'arg;;
val _of_Admin'V1'send_admin_message'arg : t_Admin'V1'send_admin_message'arg -> Xdr.xdr_value;;
val _to_Admin'V1'send_admin_message'res : Xdr.xdr_value -> t_Admin'V1'send_admin_message'res;;
val _of_Admin'V1'send_admin_message'res : t_Admin'V1'send_admin_message'res -> Xdr.xdr_value;;

(* XDR definitions *)

val xdrt_longstring : Xdr.xdr_type_term;;
val xdrt_internal_port : Xdr.xdr_type_term;;
val xdrt_message : Xdr.xdr_type_term;;
val xdrt_socket_id : Xdr.xdr_type_term;;
val xdrt_socket_id_list : Xdr.xdr_type_term;;
val xdrt_event_type : Xdr.xdr_type_term;;
val xdrt_event : Xdr.xdr_type_term;;
val xdrt_level : Xdr.xdr_type_term;;
val xdrt_Control'V1'ping'arg : Xdr.xdr_type_term;;
val xdrt_Control'V1'ping'res : Xdr.xdr_type_term;;
val xdrt_Control'V1'poll'arg : Xdr.xdr_type_term;;
val xdrt_Control'V1'poll'res : Xdr.xdr_type_term;;
val xdrt_Control'V1'accepted'arg : Xdr.xdr_type_term;;
val xdrt_Control'V1'accepted'res : Xdr.xdr_type_term;;
val xdrt_System'V1'ping'arg : Xdr.xdr_type_term;;
val xdrt_System'V1'ping'res : Xdr.xdr_type_term;;
val xdrt_System'V1'lookup'arg : Xdr.xdr_type_term;;
val xdrt_System'V1'lookup'res : Xdr.xdr_type_term;;
val xdrt_System'V1'send_message'arg : Xdr.xdr_type_term;;
val xdrt_System'V1'send_message'res : Xdr.xdr_type_term;;
val xdrt_System'V1'log'arg : Xdr.xdr_type_term;;
val xdrt_System'V1'log'res : Xdr.xdr_type_term;;
val xdrt_result_code : Xdr.xdr_type_term;;
val xdrt_unit_result : Xdr.xdr_type_term;;
val xdrt_socket_domain : Xdr.xdr_type_term;;
val xdrt_port : Xdr.xdr_type_term;;
val xdrt_port_list : Xdr.xdr_type_term;;
val xdrt_prot : Xdr.xdr_type_term;;
val xdrt_prot_list : Xdr.xdr_type_term;;
val xdrt_srv_state : Xdr.xdr_type_term;;
val xdrt_service : Xdr.xdr_type_term;;
val xdrt_service_list : Xdr.xdr_type_term;;
val xdrt_Admin'V1'ping'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V1'ping'res : Xdr.xdr_type_term;;
val xdrt_Admin'V1'list'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V1'list'res : Xdr.xdr_type_term;;
val xdrt_Admin'V1'enable'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V1'enable'res : Xdr.xdr_type_term;;
val xdrt_Admin'V1'disable'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V1'disable'res : Xdr.xdr_type_term;;
val xdrt_Admin'V1'restart'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V1'restart'res : Xdr.xdr_type_term;;
val xdrt_Admin'V1'restart_all'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V1'restart_all'res : Xdr.xdr_type_term;;
val xdrt_Admin'V1'shutdown'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V1'shutdown'res : Xdr.xdr_type_term;;
val xdrt_Admin'V1'reopen_logfiles'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V1'reopen_logfiles'res : Xdr.xdr_type_term;;
val xdrt_Admin'V1'send_admin_message'arg : Xdr.xdr_type_term;;
val xdrt_Admin'V1'send_admin_message'res : Xdr.xdr_type_term;;

(* Program definitions *)

val program_Control'V1 : Rpc_program.t;;
val program_System'V1 : Rpc_program.t;;
val program_Admin'V1 : Rpc_program.t;;

